<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术匝记簿</title>
  
  
  <link href="https://www.ckxgzxa.top/atom.xml" rel="self"/>
  
  <link href="https://www.ckxgzxa.top/"/>
  <updated>2022-07-15T18:08:45.400Z</updated>
  <id>https://www.ckxgzxa.top/</id>
  
  <author>
    <name>残魁斜罡</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>0714 可视化思维与表达</title>
    <link href="https://www.ckxgzxa.top/icbcinternship04.html"/>
    <id>https://www.ckxgzxa.top/icbcinternship04.html</id>
    <published>2022-07-15T04:10:18.000Z</published>
    <updated>2022-07-15T18:08:45.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0714-可视化思维与表达"><a href="#0714-可视化思维与表达" class="headerlink" title="0714 可视化思维与表达"></a>0714 可视化思维与表达</h1><h2 id="1-可视化思维缘起"><a href="#1-可视化思维缘起" class="headerlink" title="1. 可视化思维缘起"></a>1. 可视化思维缘起</h2><blockquote><p>思维可视化：是指运用一系列图示技术把本来不可视的思维(思考方法和思考路径)呈现出来，使其清晰可见的过。被可视化的”思维”更有利于理解和记忆，因此可以有效提高信息加工及信息传递的效能。</p></blockquote><p>由巴普洛夫实验等相关的实验表明：</p><ul><li><p>学习的宏观本质：<strong>建立联系</strong></p></li><li><p>学习的微观本质：<strong>赫布定律</strong></p></li></ul><p>可视化思维：</p><ol><li>知识数量是基础，联结是关键；</li><li>内存有限，需要提供辅助；</li><li>广泛的联结需要更丰富的刺激；</li><li>可以通过练习达成稳定的联结。</li></ol><h2 id="2-可视化工具介绍"><a href="#2-可视化工具介绍" class="headerlink" title="2. 可视化工具介绍"></a>2. 可视化工具介绍</h2><h3 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h3><p>传统笔记缺点：</p><ol><li><strong>关键性信息少</strong>，不超过全部信息的20%;</li><li>笔记的修改整理让人头痛，内容<strong>存在重复</strong>;</li><li>难以看出材料中的内在<strong>逻辑关系</strong>;</li><li>单一的文字信息，让大脑<strong>昏昏欲睡</strong>;</li><li>阅读资料<strong>被动式接受</strong>，信息传递单向性，缺乏互动和创造;</li><li>传统的笔记记录方式容易有疏漏造成<strong>记忆断层</strong>。</li></ol><p>思维导图的原则：</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207160206835.png"></p><h2 id="3-可视化表达应用"><a href="#3-可视化表达应用" class="headerlink" title="3. 可视化表达应用"></a>3. 可视化表达应用</h2><h3 id="3-1-提升自我"><a href="#3-1-提升自我" class="headerlink" title="3.1 提升自我"></a>3.1 提升自我</h3><h3 id="3-2-分析问题"><a href="#3-2-分析问题" class="headerlink" title="3.2 分析问题"></a>3.2 分析问题</h3><h3 id="3-3-改善团队"><a href="#3-3-改善团队" class="headerlink" title="3.3 改善团队"></a>3.3 改善团队</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0714-可视化思维与表达&quot;&gt;&lt;a href=&quot;#0714-可视化思维与表达&quot; class=&quot;headerlink&quot; title=&quot;0714 可视化思维与表达&quot;&gt;&lt;/a&gt;0714 可视化思维与表达&lt;/h1&gt;&lt;h2 id=&quot;1-可视化思维缘起&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="2022新疆工行星令营" scheme="https://www.ckxgzxa.top/categories/2022%E6%96%B0%E7%96%86%E5%B7%A5%E8%A1%8C%E6%98%9F%E4%BB%A4%E8%90%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>0712 结构性思维笔记</title>
    <link href="https://www.ckxgzxa.top/icbcinternship03.html"/>
    <id>https://www.ckxgzxa.top/icbcinternship03.html</id>
    <published>2022-07-14T14:37:23.000Z</published>
    <updated>2022-07-15T04:09:49.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0712-结构性思维笔记"><a href="#0712-结构性思维笔记" class="headerlink" title="0712 结构性思维笔记"></a>0712 结构性思维笔记</h1><blockquote><p>结构的定义：组成整体的各部分的搭配和安排</p><p>作用：</p><ul><li>在建筑中，决定形状建立连接</li><li>在影片中，不可见，确保故事精彩</li><li>在企业中，建立管理体系，决定组织效率</li></ul></blockquote><h2 id="1-构建结构性思维"><a href="#1-构建结构性思维" class="headerlink" title="1. 构建结构性思维"></a>1. 构建结构性思维</h2><h3 id="1-1-结构性思维的四个特点"><a href="#1-1-结构性思维的四个特点" class="headerlink" title="1.1 结构性思维的四个特点"></a>1.1 结构性思维的四个特点</h3><ul><li>结构先行</li><li>上下对应</li><li>分类清楚</li><li>排序逻辑</li></ul><h3 id="1-2-结构性思维接收信息"><a href="#1-2-结构性思维接收信息" class="headerlink" title="1.2 结构性思维接收信息"></a>1.2 结构性思维接收信息</h3><ol><li><strong>识别</strong>：识别信息中的事实与个人观点或判断</li><li><strong>对应</strong>：找到事实与观点之间的对应关系</li><li><strong>结构</strong>：画出结构性关系图</li><li><strong>表达</strong>：用语言表达信息的主要含义</li></ol><h2 id="2-纵向结构"><a href="#2-纵向结构" class="headerlink" title="2. 纵向结构"></a>2. 纵向结构</h2><h3 id="2-1-从上到下提问回答"><a href="#2-1-从上到下提问回答" class="headerlink" title="2.1 从上到下提问回答"></a>2.1 从上到下提问回答</h3><ol><li>步骤一、设定场景</li><li>步骤二、确定主题</li><li>步骤三、设想问题</li><li>步骤四、回答问题</li></ol><h3 id="2-2-从下到上概括总结"><a href="#2-2-从下到上概括总结" class="headerlink" title="2.2 从下到上概括总结"></a>2.2 从下到上概括总结</h3><blockquote><ol><li>文章的标题句就是主题句；</li><li>PPT的标题句就是主题句；</li><li>自然段的段首句就是主题句。</li></ol></blockquote><h3 id="3-横向结构"><a href="#3-横向结构" class="headerlink" title="3. 横向结构"></a>3. 横向结构</h3><h4 id="3-1-演绎论证"><a href="#3-1-演绎论证" class="headerlink" title="3.1 演绎论证"></a>3.1 演绎论证</h4><blockquote><p>从普遍性的理论知识出发认识个别、特殊的现象的一种论证推理方法、</p></blockquote><p>演绎论证的两种结构：</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207150135950.png"></p><h4 id="3-2-归纳论证"><a href="#3-2-归纳论证" class="headerlink" title="3.2 归纳论证"></a>3.2 归纳论证</h4><blockquote><p>从许多个别的事务中概括出性概念、原则或结论的推理方法。</p></blockquote><p>三种排序：时间顺序、结构顺序、重要性顺序</p><p>分类的标准：<strong>MECE</strong>原则</p><blockquote><p>Mutually Exclusive &amp; Collectively Exhaustive</p><p>相互独立 完全穷尽 | 不重不漏</p><p>互不交叉 应有尽有 | 分清分尽</p></blockquote><h3 id="4-序言结构"><a href="#4-序言结构" class="headerlink" title="4. 序言结构"></a>4. 序言结构</h3><table>    <caption>序言的四要素</caption>    <tr>        <td style="background-color:red">S(情景)</td>        <td>发展和科技的进步，人群结构中的“老龄化”已经呈现明显的趋势</td>    </tr>    <tr>        <td style="background-color:red">C(冲突)</td>        <td>然而记者在调查中发现，虽然老年人越来越多，然而他们在服装购买方面却存在着各种各样的困难，在商场中很难找到老年人专柜，老年人也没有自己的“名牌”</td>    </tr>      <tr>        <td style="background-color:red">Q(疑问)</td>        <td>如何满足老年人的服装购买需要</td>    </tr>    <tr>        <td style="background-color:red">A(回答)</td>        <td>这一问题引起了嗅觉敏捷的商家开始经营老年人的服装，并初见成效</td>    </tr>    </table><p>序言标准结构及变化</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207150147153.png"></p><h3 id="5-小结"><a href="#5-小结" class="headerlink" title="5 小结"></a>5 小结</h3><p>第一部分:构建结构性思维，共学习了两个四。第一个，结构性思维的四大基本特点:结论先行、上下对应、分类清楚、排序逻辑。第二个，结构性思维接收信息的四大步骤:<br>第一识别，识别信息中的事实和观点;第二对应，找出事实与观点的对应关系;第三结构，画出结构图;<br>第四表达,表达成一句话，“在序的基础上，从ABC三个方面说明了G”</p><p>第二部分:纵向结构。纵向结构是两个方向:从上到下和从下到上。<br>从上到下是提问回答，从下到上是概括总结。<br>那从上到下的提问回答又做了两个延展，问到多深?公理定理和已知条件;问到多宽?重点是保证主题中所有的关键词都被提问到。<br>从下到上的概括总结基本要求是严格的上下对应，相当于数学题的等号，在商务文体写作中做到有内容的主题句。</p><p>第三部分:横向结构。两种逻辑关系:一个演绎、第二个归纳。<br>演绎论证有两种形式，第一个叫标准式，也叫三段论，也就是大前提、小前提和结论;第二个是常见式，也分三个部分，是现象、原因、解决方案。<br>归纳的重点两个知识点:排序和分类。三种常见的排序方法:第一个是按时间，第二个按结构，第三个按重要性。分类的衡量标准式MECE原则，分清和分净,或者相互独立、完全穷尽、或者不重不漏。分类的重要行为要求是界定范围和明确标准。</p><p>第四部分:序言结构。四要素，用英文字母是SCQA,用中文表达是:背景、冲突、提问和回答。一起做个变形:开门见山式是A在前面,突出忧虑式是C在前,突出信心式Q在前面。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0712-结构性思维笔记&quot;&gt;&lt;a href=&quot;#0712-结构性思维笔记&quot; class=&quot;headerlink&quot; title=&quot;0712 结构性思维笔记&quot;&gt;&lt;/a&gt;0712 结构性思维笔记&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;结构的定义：组成整体的各部分的搭配</summary>
      
    
    
    
    <category term="2022新疆工行星令营" scheme="https://www.ckxgzxa.top/categories/2022%E6%96%B0%E7%96%86%E5%B7%A5%E8%A1%8C%E6%98%9F%E4%BB%A4%E8%90%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>0710 自我认知与个人发展</title>
    <link href="https://www.ckxgzxa.top/icbcinternship02.html"/>
    <id>https://www.ckxgzxa.top/icbcinternship02.html</id>
    <published>2022-07-09T14:39:06.000Z</published>
    <updated>2022-07-09T15:45:04.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0710-自我认知与个人发展-成为更好的自己"><a href="#0710-自我认知与个人发展-成为更好的自己" class="headerlink" title="0710 自我认知与个人发展_成为更好的自己"></a>0710 自我认知与个人发展_成为更好的自己</h1><h2 id="1-谁是我-全景人才画像"><a href="#1-谁是我-全景人才画像" class="headerlink" title="1. 谁是我: 全景人才画像"></a>1. 谁是我: 全景人才画像</h2><ul><li><p>人的全景画像</p><ul><li>德、才</li><li>德、能、勤、绩、廉</li></ul><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092250236.png"></p></li><li><p>麦克里兰：冰山模型</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092251418.png"></p></li><li><p>员工画像（MPA模型）</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092252846.png"></p></li></ul><h2 id="2-我是谁：自我评价与分析"><a href="#2-我是谁：自我评价与分析" class="headerlink" title="2. 我是谁：自我评价与分析"></a>2. 我是谁：自我评价与分析</h2><h3 id="2-1-愿不愿：动机类测评工具"><a href="#2-1-愿不愿：动机类测评工具" class="headerlink" title="2.1 愿不愿：动机类测评工具"></a>2.1 愿不愿：动机类测评工具</h3><ul><li><p><strong>麦克里兰：动机理论</strong></p></li><li><p>霍兰德：职业兴趣测试</p></li><li><p>罗克奇：职业价值观测试</p></li><li><p><strong>埃德加·H·施恩：职业锚</strong></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092258857.png"></p></li></ul><h3 id="2-2-合不合：人格类测评工具"><a href="#2-2-合不合：人格类测评工具" class="headerlink" title="2.2 合不合：人格类测评工具"></a>2.2 合不合：人格类测评工具</h3><ul><li><p>特质类测评工具</p><ul><li><p>16PF、15FQ+、<strong>盖洛普优势才干</strong>、<strong>大五人格</strong></p></li><li><p>大五人格</p><ul><li><p>情绪稳定性、外倾性、经验开放性、宜人性、尽责性</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092315603.png"></p></li><li></li></ul></li></ul></li><li><p>风格类测评工具</p><ul><li><p><strong>DISC</strong>、PDP、颜色心理、RTC、MBTI、MMPI</p></li><li><p>DISC</p><ul><li><p>美国心理学家、人类行为科学家马斯顿（Dr.WilliamMoulton Marston)博士于20世纪20年代所创（The Emotions of Normal People,1928)</p><ul><li>Dominance，支配型</li><li>Influence，影响型</li><li>Steadiness，稳健型</li><li>Compliance，服从型</li></ul></li><li><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092317117.png"></p></li><li><p>高D（支配）型</p><p><strong>结果导向</strong> | 强调结果和目标 | 喜欢有挑战性的工作 | 自信、主动积极 | 说话直接 |地盘意识强 | 敢于冒险 | 喜欢创新</p></li><li><p>高I（影响）型</p><p><strong>人际导向</strong> | 喜欢做与人有关的工作 | 积极乐观、幽默风趣 | 善于语言激励 | 人际洞察力强 | 富有同理心 | 热情友善 | 富有创意</p></li><li><p>高S（稳健）型</p><p><strong>价值导向</strong> | 追求专业和中长期的卓越 | 做事持久有耐心 | 善于做中长期规划 | 喜欢按照自己的节奏、步调做事，不喜欢临时变化 | 追求和谐、富合作精神 | 避免冲突 | 亲切温暖</p></li><li><p>高C（服从）型</p><p><strong>过程导向</strong> | 重计划，讲条理、制度、规则 | 原则性强 | 完美主义、重细节 | 讲求专业价值 | 是非、道德观念强 | 可靠、重承诺 | 细心谨慎</p></li><li><p>整合型</p><p><strong>情景导向</strong> | 适应性和灵活性强 | 扮演不同的角色都感觉很舒适 | 能够轻易地在四种特质之间转换</p></li></ul></li><li><p>风格类测评报告解读</p><ul><li><strong>性格只有差异,没有好坏,相对于特定的情景,性格特质都有可能有不足或过当的情况</strong></li><li>每个人的性格特质上没有有无的差别,只有程度的不同</li><li><strong>不要为别人贴”标签”，更不要为自己的不足找借口</strong></li><li>领导需要特殊的才干,但每种类型的人都可能成为领导,重要的是你能否找到合适的领域,并配置好一个互补的团队</li></ul></li></ul></li></ul><h2 id="2-我会是谁：个人发展逻辑"><a href="#2-我会是谁：个人发展逻辑" class="headerlink" title="2. 我会是谁：个人发展逻辑"></a>2. 我会是谁：个人发展逻辑</h2><ul><li><p>自我认知与个人发展路径</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092335880.png"></p></li><li><p>管理的认知</p><ul><li><p>管理的道与术：儒里道外</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207092339645.png"></p></li><li><p>管理的辩证法</p><ul><li>柔与刚：严管厚爱</li><li>有与无：无为创造有为</li></ul></li><li><p>以出世的心态做入世的事情</p></li></ul></li><li><p>个人发展的逻辑</p><p>知：终身成长</p><p>行：刻意练习</p><ul><li>终身成长=成长型思维+刻意练习</li><li>成长是一辈子的事,无关性格、无关年龄、无关性别,甚至无关天分</li><li>不要把不努力当做没有天分的借口</li><li>自我觉察、发现优势、发展优势</li><li>动机决定行为、行为决定习惯、习惯决定命运</li></ul></li><li><p>建设自己的个人发展计划</p></li></ul><blockquote><p>推荐书籍：</p><ol><li>《我们都是自己的陌生人》(美)戴维迈尔斯</li><li>《终身成长》（美）卡罗尔德韦克</li><li>《刻意练习》(美)安德斯艾利克森</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0710-自我认知与个人发展-成为更好的自己&quot;&gt;&lt;a href=&quot;#0710-自我认知与个人发展-成为更好的自己&quot; class=&quot;headerlink&quot; title=&quot;0710 自我认知与个人发展_成为更好的自己&quot;&gt;&lt;/a&gt;0710 自我认知与个人发展_成为更好的</summary>
      
    
    
    
    <category term="2022新疆工行星令营" scheme="https://www.ckxgzxa.top/categories/2022%E6%96%B0%E7%96%86%E5%B7%A5%E8%A1%8C%E6%98%9F%E4%BB%A4%E8%90%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>0708 中国工商银行集团文化介绍笔记</title>
    <link href="https://www.ckxgzxa.top/icbcinternship01.html"/>
    <id>https://www.ckxgzxa.top/icbcinternship01.html</id>
    <published>2022-07-08T14:42:23.000Z</published>
    <updated>2022-07-08T14:46:12.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0708-中国工商银行集团文化介绍笔记"><a href="#0708-中国工商银行集团文化介绍笔记" class="headerlink" title="0708 中国工商银行集团文化介绍笔记"></a>0708 中国工商银行集团文化介绍笔记</h1><h2 id="1-文化传承"><a href="#1-文化传承" class="headerlink" title="1. 文化传承"></a>1. 文化传承</h2><h3 id="1-1-红色金融文化传承"><a href="#1-1-红色金融文化传承" class="headerlink" title="1.1 红色金融文化传承"></a>1.1 红色金融文化传承</h3><ul><li>大革命时期 -&gt; 土地革命时期 -&gt; 抗日战争时期</li><li>扁担银行、马背银行、窑洞银行</li></ul><h3 id="1-2-文化萌芽（1984-1993）"><a href="#1-2-文化萌芽（1984-1993）" class="headerlink" title="1.2 文化萌芽（1984-1993）"></a>1.2 文化萌芽（1984-1993）</h3><p><strong>三铁精神：</strong>铁账本、铁算盘、铁规章</p><p><strong>工行精神：</strong>求实创新、吃苦耐劳、顾全大局、团结奋进</p><p>1983年12月30日，中国工商银行成立大会在北京召开</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207082109157.png" alt="工行总行第一块门牌"></p><h3 id="1-3-文化成长（1994-2005）"><a href="#1-3-文化成长（1994-2005）" class="headerlink" title="1.3 文化成长（1994-2005）"></a>1.3 文化成长（1994-2005）</h3><p><strong>十字方针：</strong> 效益、质量、发展、管理、创新</p><p><strong>五种观念：</strong>稳健的发展观、真实的效益观、全面的质量观、严格的管理观、科学的创新观</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207082118862.png" alt="家喻户晓的宣传语"></p><h3 id="1-4-文化形成（2005-2019）"><a href="#1-4-文化形成（2005-2019）" class="headerlink" title="1.4 文化形成（2005-2019）"></a>1.4 文化形成（2005-2019）</h3><ul><li><p>2005年10月，成立中国工商银行股份有限公司</p></li><li><p>2006年10月，在上海、香港同步上市</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207082122018.png"></p></li><li><p>五项原则</p><ol><li>以<strong>改革</strong>为突破</li><li>以<strong>创新</strong>为突破</li><li>以<strong>服务</strong>为突破</li><li>以转变<strong>发展方式</strong>为主要途径</li><li>以<strong>人</strong>为本</li></ol></li><li><p>股改精神</p><p>勤于<strong>探索</strong> | 勇于<strong>创造</strong></p><p>善于<strong>借鉴</strong> | 敢于<strong>超越</strong></p></li><li><p>一个核心、四个支撑、两个延伸的企业文化建设体系</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207082201856.png"></p><ul><li><p>一个核心：工于至诚，行以致远的价值观</p></li><li><p>四个支撑：</p><pre><code>四个子文化：</code></pre><ol><li>廉洁：公开透明、公私分明、自律律他、言行并重</li><li>合规：合规为本、全员有责、风险可控、稳健高效</li><li>服务：客户为尊、服务如意、员工为本、诚信如一</li><li>创新：聚焦本源、因势革故、协同鼎新、永葆生机</li></ol></li><li><p>两个延伸</p><ul><li><p>向重点业务板块拓展的专业文化</p><p>经济本源 | 诚信合规 | 专家治贷</p><p>审慎稳健 | 客户优选 | 责任落实</p></li><li><p>区域特征鲜明的特色文化</p></li></ul></li></ul></li></ul><h3 id="1-5-文化提升（2019-至今）"><a href="#1-5-文化提升（2019-至今）" class="headerlink" title="1.5 文化提升（2019-至今）"></a>1.5 文化提升（2019-至今）</h3><p>为各地脱贫攻坚提供一支强有力的力量</p><h3 id="1-6-文化基因"><a href="#1-6-文化基因" class="headerlink" title="1.6 文化基因"></a>1.6 文化基因</h3><ul><li>党建引领、凝心聚力，是工行的底色</li><li>诚实守信、尽职尽责，是工行的本色</li><li>严谨规范、稳健合规，是工行的特色</li><li>创新进取、追求卓越，是工行的亮色</li><li>吃苦耐劳、敬业奉献，是工行的基色</li></ul><h2 id="2-文化体系和实践"><a href="#2-文化体系和实践" class="headerlink" title="2. 文化体系和实践"></a>2. 文化体系和实践</h2><h3 id="2-1-企业文化之定义"><a href="#2-1-企业文化之定义" class="headerlink" title="2.1 企业文化之定义"></a>2.1 企业文化之定义</h3><p><strong>企业文化</strong>是在长期经营管理实践活动中逐步形成的，被企业员工普遍认同和遵循的经营理念、价值取向、思维方式、规章制度、行为准则以及企业外部形象的总称。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202207082201729.png"></p><h3 id="2-2-工商银行的精神文化"><a href="#2-2-工商银行的精神文化" class="headerlink" title="2.2 工商银行的精神文化"></a>2.2 工商银行的精神文化</h3><h4 id="1-使命"><a href="#1-使命" class="headerlink" title="1. 使命"></a>1. 使命</h4><p>提供卓越金融服务</p><ul><li><strong>服务客户</strong>：就是要不断提高服务能力和质量</li><li><strong>回报股东</strong>：就是要为股东创造最佳价值回报</li><li><strong>成就员工</strong>：就是要为员工提供广阔发展平台</li><li><strong>奉献社会</strong>：就是要主动承担更多企业责任</li></ul><h4 id="2-愿景"><a href="#2-愿景" class="headerlink" title="2. 愿景"></a>2. 愿景</h4><p>全面建设具有全球竞争力的世界一流现代金融企业，成为基业长青的银行</p><ol><li>基本完成现代商业银行布局：于建党100年为起点，直到2023年工商银行成立40周年之际</li><li>完成由传统银行向现代银行的转型：展望2025年，十四五规划完成之际</li><li>成为卓越银行：远眺2035年，我国基本实现社会主义现代化工商银行成立50周年之时</li></ol><h4 id="3-价值观"><a href="#3-价值观" class="headerlink" title="3. 价值观"></a>3. 价值观</h4><p>工于至诚、行以致远</p><p>前提:</p><ul><li>工：工行、工匠 -&gt; 表明一种精神和态度</li><li>诚：诚信、忠诚 -&gt; 表明一种原则和信念</li></ul><p>结果:</p><ul><li>行：执行、同行 -&gt; 表明一种行为和状态</li><li>远：长远、高远 -&gt; 表明一种境界和追求</li></ul><h4 id="4-先进的文化理念"><a href="#4-先进的文化理念" class="headerlink" title="4. 先进的文化理念"></a>4. 先进的文化理念</h4><p>以坚持党的建设为统领，提升文化引导力</p><p>以社会主义核心价值观为指引，提升文化凝聚力</p><p>以融入经营管理为途径，提升文化渗透力</p><p>以打造品牌活动为抓手，提升文化感染力</p><p>以反应员工心声为着力点，提升文化感召力</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0708-中国工商银行集团文化介绍笔记&quot;&gt;&lt;a href=&quot;#0708-中国工商银行集团文化介绍笔记&quot; class=&quot;headerlink&quot; title=&quot;0708 中国工商银行集团文化介绍笔记&quot;&gt;&lt;/a&gt;0708 中国工商银行集团文化介绍笔记&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="2022新疆工行星令营" scheme="https://www.ckxgzxa.top/categories/2022%E6%96%B0%E7%96%86%E5%B7%A5%E8%A1%8C%E6%98%9F%E4%BB%A4%E8%90%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>算法题目01</title>
    <link href="https://www.ckxgzxa.top/algorithm_problem01.html"/>
    <id>https://www.ckxgzxa.top/algorithm_problem01.html</id>
    <published>2022-06-14T15:51:02.000Z</published>
    <updated>2022-06-14T15:53:34.770Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-链表题"><a href="#1-链表题" class="headerlink" title="1. 链表题"></a>1. 链表题</h3><ol><li><a href="https://leetcode.cn/problems/reverse-linked-list/">一个长度为n的单向链表，用O(1) 空间复杂度来实现倒转输出，使用最低时间复杂度</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> ListNode <span class="hljs-title function_">reverseList</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">pre</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">tmp</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">while</span>(cur != <span class="hljs-literal">null</span>) &#123;<br>            tmp = cur.next;<br>            cur.next = pre;<br>            pre = cur;<br>            cur = tmp;<br>        &#125;<br>        <span class="hljs-keyword">return</span> pre;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li><a href="https://leetcode.cn/problems/middle-of-the-linked-list/">找出单链表的中间元素，要求用时最少</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> ListNode <span class="hljs-title function_">middleNode</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <br>        <span class="hljs-keyword">if</span>(head == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        <br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">fast</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head;<br><br>        <span class="hljs-keyword">while</span>(fast!=<span class="hljs-literal">null</span> &amp;&amp; fast.next!= <span class="hljs-literal">null</span>) &#123;<br>            slow = slow.next;<br>            fast = fast.next.next;<br>        &#125;<br>        <span class="hljs-keyword">return</span> slow;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li><a href="https://leetcode.cn/problems/linked-list-cycle/">单链表中是否有环，写出代码</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">hasCycle</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">fast</span> <span class="hljs-operator">=</span> head;<br>        <br>        <span class="hljs-keyword">while</span>(fast!= <span class="hljs-literal">null</span> &amp;&amp; fast.next != <span class="hljs-literal">null</span>) &#123;<br>            fast = fast.next.next;<br>            slow = slow.next;<br>            <span class="hljs-keyword">if</span>(fast == slow) <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> !(fast == <span class="hljs-literal">null</span> || fast.next == <span class="hljs-literal">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="4"><li><a href="https://leetcode.cn/problems/c32eOV/">如果单链表中有环，请找到环的入口点</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> ListNode <span class="hljs-title function_">findLoopNode</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">slow</span> <span class="hljs-operator">=</span> head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">fast</span> <span class="hljs-operator">=</span> head;<br>        <br>        <span class="hljs-keyword">while</span>(fast != <span class="hljs-literal">null</span> &amp;&amp; fast.next != <span class="hljs-literal">null</span>) &#123;<br>            slow = slow.next;<br>            fast = fast.next.next;<br>            <span class="hljs-keyword">if</span>(slow == fast) <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <br>        <span class="hljs-keyword">if</span>(fast == <span class="hljs-literal">null</span> || fast.next == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        <br>        slow = head;<br>        <br>        <span class="hljs-keyword">while</span>(slow != fast) &#123;<br>            slow = slow.next;<br>            fast = fast.next;<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> fast;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-删除排序链表中的重复元素"><a href="#2-删除排序链表中的重复元素" class="headerlink" title="2. 删除排序链表中的重复元素"></a>2. 删除排序链表中的重复元素</h3><p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-list-ii/">题目链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> ListNode <span class="hljs-title function_">deleteDuplicates</span><span class="hljs-params">(ListNode head)</span> &#123;<br>        <span class="hljs-keyword">if</span>(head == <span class="hljs-literal">null</span> || head.next == <span class="hljs-literal">null</span>) <span class="hljs-keyword">return</span> head;<br><br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">tmp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ListNode</span>();<br>        tmp.next = head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">pre</span> <span class="hljs-operator">=</span>tmp;<br>        pre.next = head;<br>        <span class="hljs-type">ListNode</span> <span class="hljs-variable">cur</span> <span class="hljs-operator">=</span> head;<br><br>        <span class="hljs-keyword">while</span>(cur != <span class="hljs-literal">null</span> &amp;&amp; cur.next != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span>(pre.next.val != cur.next.val) &#123;<br>                pre = pre.next;<br>                cur = cur.next;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">while</span>(cur!= <span class="hljs-literal">null</span> &amp;&amp; cur.next != <span class="hljs-literal">null</span> &amp;&amp; cur.next.val == pre.next.val) &#123;<br>                    cur = cur.next;<br>                &#125;<br>                pre.next = cur.next;<br>                cur = cur.next;<br>            &#125;<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> tmp.next;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-简单排序"><a href="#3-简单排序" class="headerlink" title="3. 简单排序"></a>3. 简单排序</h3><ol><li>冒泡排序</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// TLE</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] sortArray(<span class="hljs-type">int</span>[] nums) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i &lt; nums.length - <span class="hljs-number">1</span>;++i) &#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i+<span class="hljs-number">1</span>; j &lt; nums.length;++j) &#123;<br>                <span class="hljs-keyword">if</span>(nums[i] &gt; nums[j]) &#123;<br>                    nums[i] = nums[i] + nums[j];<br>                    nums[j] = nums[i] - nums[j];<br>                    nums[i] = nums[i] - nums[j];<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> nums;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>插入排序</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] sortArray(<span class="hljs-type">int</span>[] nums) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt; nums.length; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> i;<br>            <span class="hljs-keyword">while</span>(j &gt; <span class="hljs-number">0</span> &amp;&amp; nums[j] &lt; nums[j - <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> nums[j];<br>                nums[j] = nums[j - <span class="hljs-number">1</span>];<br>                nums[j - <span class="hljs-number">1</span>] = temp;<br>                j--;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> nums;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-快速排序代码"><a href="#4-快速排序代码" class="headerlink" title="4. 快速排序代码"></a>4. 快速排序代码</h3><p><a href="https://leetcode.cn/problems/sort-an-array/">912. 排序数组 - 力扣（LeetCode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] sortArray(<span class="hljs-type">int</span>[] nums) &#123;<br>        quick_sort(nums, <span class="hljs-number">0</span>, nums.length - <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">return</span> nums;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">quick_sort</span><span class="hljs-params">(<span class="hljs-type">int</span> nums[], <span class="hljs-type">int</span> l, <span class="hljs-type">int</span> r)</span> &#123;<br>        <span class="hljs-keyword">if</span>(l &gt;= r) <span class="hljs-keyword">return</span>;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> l -<span class="hljs-number">1</span>, j = r + <span class="hljs-number">1</span>, x = nums[l+r &gt;&gt; <span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">while</span>(i &lt; j) &#123;<br>            <span class="hljs-keyword">do</span> i++; <span class="hljs-keyword">while</span>(nums[i] &lt; x);<br>            <span class="hljs-keyword">do</span> j--; <span class="hljs-keyword">while</span>(nums[j] &gt; x);<br>            <span class="hljs-keyword">if</span>(i&lt;j) &#123;<br>                nums[i] = nums[i] + nums[j];<br>                nums[j] = nums[i] - nums[j];<br>                nums[i] = nums[i] - nums[j];<br>            &#125;<br>        &#125;<br>        quick_sort(nums, l, j);<br>        quick_sort(nums, j + <span class="hljs-number">1</span>, r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-链表题&quot;&gt;&lt;a href=&quot;#1-链表题&quot; class=&quot;headerlink&quot; title=&quot;1. 链表题&quot;&gt;&lt;/a&gt;1. 链表题&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode.cn/problems/reverse-link</summary>
      
    
    
    
    <category term="校招" scheme="https://www.ckxgzxa.top/categories/%E6%A0%A1%E6%8B%9B/"/>
    
    <category term="算法" scheme="https://www.ckxgzxa.top/categories/%E6%A0%A1%E6%8B%9B/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>npm 常见命令</title>
    <link href="https://www.ckxgzxa.top/npm-common-commands.html"/>
    <id>https://www.ckxgzxa.top/npm-common-commands.html</id>
    <published>2022-05-21T15:34:18.000Z</published>
    <updated>2022-05-21T18:05:59.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm常用命令"><a href="#npm常用命令" class="headerlink" title="npm常用命令"></a>npm常用命令</h2><h3 id="1-构建项目"><a href="#1-构建项目" class="headerlink" title="1. 构建项目"></a>1. 构建项目</h3><p>初始化一个基于node的项目, 会创建一个配置文件<code>package.json</code>(两种方式):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1. 一般情况下, 全部enter</span><br>npm init<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2. 全部使用默认配置</span><br>npm init --yes<br></code></pre></td></tr></table></figure><h3 id="2-安装模块-包"><a href="#2-安装模块-包" class="headerlink" title="2. 安装模块(包)"></a>2. 安装模块(包)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">全局安装</span><br>npm install 模块名 -g<br><span class="hljs-meta prompt_"># </span><span class="language-bash">本地安装</span><br>npm install 模块名<br><span class="hljs-meta prompt_"># </span><span class="language-bash">一次性安装多个</span><br>npm install 模块名1 模块名2 模块名n --save<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装运行时依赖包</span><br>npm install 模块名 --save<br></code></pre></td></tr></table></figure><h3 id="3-查看安装目录"><a href="#3-查看安装目录" class="headerlink" title="3. 查看安装目录"></a>3. 查看安装目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看本地安装的目录</span><br>npm root<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看全局安装的目录</span><br>npm root -g<br></code></pre></td></tr></table></figure><h3 id="4-卸载模块-包"><a href="#4-卸载模块-包" class="headerlink" title="4. 卸载模块(包)"></a>4. 卸载模块(包)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载本地模块</span><br>npm uninstall 模块名<br><span class="hljs-meta prompt_"># </span><span class="language-bash">加载全局模块</span><br>npm uninstall -g 模块名<br></code></pre></td></tr></table></figure><h3 id="5-更新模块-包"><a href="#5-更新模块-包" class="headerlink" title="5. 更新模块(包)"></a>5. 更新模块(包)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm update 模块名<br>npm update 模块名 -g<br></code></pre></td></tr></table></figure><h3 id="6-查看当前安装的模块-包"><a href="#6-查看当前安装的模块-包" class="headerlink" title="6. 查看当前安装的模块(包)"></a>6. 查看当前安装的模块(包)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm ls<br>npm ls -g<br></code></pre></td></tr></table></figure><h3 id="7-命令配置"><a href="#7-命令配置" class="headerlink" title="7. 命令配置"></a>7. 命令配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;script&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;命令&quot;</span> <span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;执行代码&quot;</span><span class="hljs-punctuation">,</span><br>    ...<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>执行配置的命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">必须加run</span><br>npm run 命令<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">特殊的命令 start 可不加run</span><br>npm start<br>或<br>npm run start<br></code></pre></td></tr></table></figure><h3 id="8-使用国内npm镜像源"><a href="#8-使用国内npm镜像源" class="headerlink" title="8. 使用国内npm镜像源"></a>8. 使用国内npm镜像源</h3><ol><li><p>使用配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure></li><li><p>使用<code>cnpm</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">先安装cnpm工具</span><br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用cnpm代替npm</span><br>cnpm install 模块名<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;npm常用命令&quot;&gt;&lt;a href=&quot;#npm常用命令&quot; class=&quot;headerlink&quot; title=&quot;npm常用命令&quot;&gt;&lt;/a&gt;npm常用命令&lt;/h2&gt;&lt;h3 id=&quot;1-构建项目&quot;&gt;&lt;a href=&quot;#1-构建项目&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="node.js" scheme="https://www.ckxgzxa.top/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Kotlin运算符重载重载函数表</title>
    <link href="https://www.ckxgzxa.top/Kotlin-operator-SyntacticSugar.html"/>
    <id>https://www.ckxgzxa.top/Kotlin-operator-SyntacticSugar.html</id>
    <published>2022-05-12T13:36:33.000Z</published>
    <updated>2022-05-12T13:52:37.145Z</updated>
    
    <content type="html"><![CDATA[<table>    <caption><strong>Kotlin运算符重载语法糖表达式和实际调用函数对照表</strong></caption>    <tr>        <th>语法糖表达式</th>        <th>实际调用函数</th>    </tr>    <tr>        <td>a + b</td>        <td>a.plus(b)</td>    </tr>    <tr>        <td>a - b</td>        <td>a.minus(b)</td>    </tr>    <tr>        <td>a * b</td>        <td>a.times(b)</td>    </tr>    <tr>        <td>a / b</td>        <td>a.div(b)</td>    </tr>    <tr>        <td>a % b</td>        <td>a.rem(b)</td>    </tr>    <tr>        <td>a++</td>        <td>a.inc()</td>    </tr>    <tr>        <td>a--</td>        <td>a.dec()</td>    </tr>    <tr>        <td>+a</td>        <td>a.unaryPlus()</td>    </tr>    <tr>        <td>-a</td>        <td>a.unaryMinus()</td>    </tr>    <tr>        <td>!a</td>        <td>a.not()</td>    </tr>    <tr>        <td>a==b</td>        <td rowspan=4>a.equals(b)</td>    </tr>    <tr>        <td>a == b</td>    </tr>    <tr>        <td>a > b</td>    </tr>    <tr>        <td>a < b</td>    </tr>    <tr>        <td>a >= b</td>    </tr>    <tr>        <td>a <= b</td>        <td>a.compareTo(b)</td>    </tr>       <tr>        <td>a..b</td>        <td>a.rangeTo(b)</td>    </tr>    <tr>        <td>a[b]</td>        <td>a.get(b)</td>    </tr>    <tr>        <td>a[b] = c</td>        <td>a.set(b, c)</td>    </tr>    <tr>        <td>a in b</td>        <td>b.contains(a)</td>    </tr></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
    &lt;caption&gt;&lt;strong&gt;Kotlin运算符重载语法糖表达式和实际调用函数对照表&lt;/strong&gt;&lt;/caption&gt;
    &lt;tr&gt;
        &lt;th&gt;语法糖表达式&lt;/th&gt;
        &lt;th&gt;实际调用函数&lt;/th&gt;
    &lt;/t</summary>
      
    
    
    
    <category term="Kotlin" scheme="https://www.ckxgzxa.top/categories/Kotlin/"/>
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android常见限定符(自适应不同屏幕的资源)</title>
    <link href="https://www.ckxgzxa.top/AndroidQuilifiers.html"/>
    <id>https://www.ckxgzxa.top/AndroidQuilifiers.html</id>
    <published>2022-05-11T14:37:47.000Z</published>
    <updated>2022-05-11T15:08:16.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android中常见的限定符-自适应不同屏幕的资源"><a href="#Android中常见的限定符-自适应不同屏幕的资源" class="headerlink" title="Android中常见的限定符(自适应不同屏幕的资源)"></a>Android中常见的限定符(自适应不同屏幕的资源)</h2><table>    <caption>Android中常见的限定符</caption>    <tr>        <th>屏幕特征</th>        <th>限定符</th>        <th>描述</th>    </tr>    <tr>        <td rowspan=4>大小</td>        <td>small</td>        <td>提供给小屏幕设备的资源</td>    </tr>    <tr>        <td>mormal</td>        <td>提供给中等屏幕设备的资源</td>    </tr>    <tr>        <td>large</td>        <td>提供给大屏幕设备的资源</td>    </tr>    <tr>        <td>xlarge</td>        <td>提供给超大屏幕设备的资源</td>    </tr>    <tr>        <td rowspan=5>分辨率</td>        <td>ldpi</td>        <td>提供给低分辨率设备的资源（120 dpi以下）</td>    </tr>    <tr>        <td>mdpi</td>        <td>提供给中等分辨率设备的资源（120 dpi~160 dpi）</td>    </tr>       <tr>        <td>hdpi</td>        <td>提供给高分辨率设备的资源（160 dpi~240 dpi）</td>    </tr>    <tr>        <td>xhdpi</td>        <td>提供给超高分辨率设备的资源（240 dpi~320 dpi）</td>    </tr>    <tr>        <td>xxhdpi</td>        <td>提供给超超高分辨率设备的资源（320 dpi~480 dpi）</td>    </tr>    <tr>        <td rowspan=2>方向</td>        <td>land</td>        <td>提供给横屏设备的资源</td>    </tr>    <tr>        <td>port</td>        <td>提供给竖屏设备的资源</td>    </tr></table><p>下面是上面4种屏幕尺寸所需的最低尺寸</p><ul><li>xlarge屏幕尺寸至少需要 960dp × 720dp</li><li>large屏幕尺寸至少需要 640dp × 480dp</li><li>normal屏幕尺寸至少需要 470dp × 320dp</li><li>small屏幕尺寸至少需要426dp × 320dp</li></ul><blockquote><p>从Android3.2开始，Android的建议直接使用真实的屏幕尺寸来定义屏幕尺寸。</p><p>Android 3.2 支持在layout、 values 目录后添加 </p><p>sw&lt;N&gt;dp （屏幕尺寸至少宽 N 个 dp 才能使用该资源）、</p><p>w&lt;N&gt;dp（屏幕尺寸可用宽度为N个dp可使用该资源）、</p><p>h&lt;N&gt;dp （屏幕尺寸可用高度为N个dp才能使用该资源）、</p><p>例如可指定layout-sw600dp，表明该设备屏幕的宽度大于或等于600个dp时使用该目录下的布局资源。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Android中常见的限定符-自适应不同屏幕的资源&quot;&gt;&lt;a href=&quot;#Android中常见的限定符-自适应不同屏幕的资源&quot; class=&quot;headerlink&quot; title=&quot;Android中常见的限定符(自适应不同屏幕的资源)&quot;&gt;&lt;/a&gt;Android中常见</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Android" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Android/"/>
    
    
    <category term="Android" scheme="https://www.ckxgzxa.top/tags/Android/"/>
    
    <category term="移动开发" scheme="https://www.ckxgzxa.top/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Java和Kotlin的对照</title>
    <link href="https://www.ckxgzxa.top/comparasonofJava-Kotlin.html"/>
    <id>https://www.ckxgzxa.top/comparasonofJava-Kotlin.html</id>
    <published>2022-05-04T08:14:14.000Z</published>
    <updated>2022-05-08T04:44:49.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java和Kotlin数据类型对照表"><a href="#Java和Kotlin数据类型对照表" class="headerlink" title="Java和Kotlin数据类型对照表"></a>Java和Kotlin数据类型对照表</h2><table><thead><tr><th align="center">Java基本数据类型</th><th>Kotlin基本数据类型</th><th>数据类型说明</th></tr></thead><tbody><tr><td align="center">int</td><td>Int</td><td>整型</td></tr><tr><td align="center">long</td><td>Long</td><td>长整型</td></tr><tr><td align="center">short</td><td>Short</td><td>短整型</td></tr><tr><td align="center">float</td><td>Float</td><td>单精度浮点型</td></tr><tr><td align="center">double</td><td>Double</td><td>双精度浮点型</td></tr><tr><td align="center">boolean</td><td>Boolean</td><td>布尔型</td></tr><tr><td align="center">char</td><td>Char</td><td>字符型</td></tr><tr><td align="center">byte</td><td>Byte</td><td>字节型</td></tr></tbody></table><h2 id="Java和Kotlin函数可见性修饰符对照表"><a href="#Java和Kotlin函数可见性修饰符对照表" class="headerlink" title="Java和Kotlin函数可见性修饰符对照表"></a>Java和Kotlin函数可见性修饰符对照表</h2><table><thead><tr><th align="center">修饰符</th><th align="center">Java</th><th align="center">Kotlin</th></tr></thead><tbody><tr><td align="center">public</td><td align="center">所有类可见</td><td align="center">所有类可见(默认)</td></tr><tr><td align="center">private</td><td align="center">当前类可见</td><td align="center">当前类可见</td></tr><tr><td align="center">protected</td><td align="center">当前类、子类、同一包路径下的类可见</td><td align="center">当前类、子类可见</td></tr><tr><td align="center">default</td><td align="center">同一包路径下的类可见(默认)</td><td align="center">无</td></tr><tr><td align="center">internal</td><td align="center">无</td><td align="center">同一模块中的类可见</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java和Kotlin数据类型对照表&quot;&gt;&lt;a href=&quot;#Java和Kotlin数据类型对照表&quot; class=&quot;headerlink&quot; title=&quot;Java和Kotlin数据类型对照表&quot;&gt;&lt;/a&gt;Java和Kotlin数据类型对照表&lt;/h2&gt;&lt;table&gt;
&lt;</summary>
      
    
    
    
    <category term="Kotlin" scheme="https://www.ckxgzxa.top/categories/Kotlin/"/>
    
    <category term="Java" scheme="https://www.ckxgzxa.top/categories/Java/"/>
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>UML类图</title>
    <link href="https://www.ckxgzxa.top/UMLClassDiagram.html"/>
    <id>https://www.ckxgzxa.top/UMLClassDiagram.html</id>
    <published>2022-04-19T11:09:06.000Z</published>
    <updated>2022-04-29T03:14:42.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UML类图"><a href="#UML类图" class="headerlink" title="UML类图"></a>UML类图</h1><p>[toc]</p><h2 id="1-UML概述"><a href="#1-UML概述" class="headerlink" title="1. UML概述"></a>1. UML概述</h2><p>UML(Unified Modeling Language， 统一建模语言）是当前面向对象软件系统建模的标准语言 ，它融合了众多软件建模技术的优点 ，通过一系列标准的图形符号来描述系统 。 在设计模式的学习和使用过程中也需要掌握一些UML相关技术 ， 尤其是UML类图 ，通过类图可以更好地理解每一个设计模式的结构并对每一个模式实例进行分析 。</p><h2 id="2-类与类的UML表示"><a href="#2-类与类的UML表示" class="headerlink" title="2. 类与类的UML表示"></a>2. 类与类的UML表示</h2><h3 id="2-1-类"><a href="#2-1-类" class="headerlink" title="2.1 类"></a>2.1 类</h3><p>类(Class)封装了数据和行为 ，是面向对象的重要组成部分，它是具有相同属性 、操作、关系的对象集合的总称。</p><p>类图(Class Diagram)使用出现在系统中的不同类来描述系统的静态结构 ，它用来描述 不同的类以及它们之间的关系 。</p><h3 id="2-2-类的UML图示"><a href="#2-2-类的UML图示" class="headerlink" title="2.2 类的UML图示"></a>2.2 类的UML图示</h3><p>在UML中类使用包含类名属性和操作且带有分隔线的长方形来表示:</p><pre><code class=" mermaid">classDiagramclass Employee&#123;- name : String- age : int- email : String+ modify() : void    &#125;</code></pre><p>对应的Java代码片段如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Employee</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">private</span> String email;<br>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">modifyInfo</span><span class="hljs-params">()</span> &#123;<br>        ...<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在UML类图中, 类一般由三部分组成。</p><ol><li><p>第一部分是列名；</p></li><li><p>第二部分是类的属性（Attributes）：属性是指类的性质，即类的成员变量。一个类可以有任意多个属性，也可以没有属性。</p><hr><p>属性的标识方式如下：</p><p><strong>[ 可见性 ] 名称:类型 [ = 默认值 ]</strong></p><hr></li></ol><ol><li><p>“可见性” 表示该属性对于类外的元素而言是否可见，它们的符号表示如下：</p><table>    <tr>        <td>公有(public)</td>        <td>+</td>    </tr>    <tr>        <td>私有(private)</td>        <td>-</td>    </tr>    <tr>        <td>受保护(protected)</td>        <td>#</td>    </tr>    <tr>        <td>默认</td>        <td>*</td>    </tr></table></li><li><p>”名称“表示属性名，用一个字符串表示。</p></li><li><p>“类型”表示属性的数据类型，可以是基本数据类型，也可以是用户自定义类型。</p></li><li><p>“默认值是一个可选项，即属性的初始值。</p></li><li><p>第三部分是类的操作（Operations）：操作是类的任意一个实例对象都可以使用的行为，是类的成员方法。</p></li></ol><hr><p>   UML规定操作的表示方式如下：</p><p>   <strong>[ 可见性 ] 名称([ 参数列表 ]) [ : 返回类型]</strong></p><hr><p>   其中：</p><ol><li>“可见性”的定义和属性的可见性的定义相同。</li><li>“名称”即方法名或操作名，用一个字符串表示。</li><li>“参数列表”表示方法的参数，其语法与属性的定义相似 ，参数个数是任意的，多个参数之间用逗号” , “隔开 。</li><li>“返回类型”是一个可选性，表示方法的返回值类型，依赖于具体的编程语言，可以是基本数据类型，也可以是用户自定义类型，还可以是空类型(void) ，<em>如果是构造方法， 则无返回类型</em>。</li></ol><h3 id="2-3-类之间的关系"><a href="#2-3-类之间的关系" class="headerlink" title="2.3 类之间的关系"></a>2.3 类之间的关系</h3><p>在软件系统中类并不是孤立存在的 ，类与类之间存在各种关系， 对于不同类型的关系， UML 提供了不同的表示方式。</p><h4 id="2-3-1-关联关系"><a href="#2-3-1-关联关系" class="headerlink" title="2.3.1 关联关系"></a>2.3.1 关联关系</h4><p><strong>关联(Association)关系</strong>是类与类之间最常用的一种关系，它是一种结构化关系，用于表示一类对象与另一类对象之间有联系， 如汽车和轮胎 、 师傅和徒弟 、 班级和学生等。</p><p>在UML类图中用<strong>实线</strong>连接有关联关系的对象所对应的类，在使用 Java 、 C ＃和 C＋＋等编程语言实现关联关系时，通常将一个类的对象作为另一个类的成员变量。</p><p>在使用类图表示关联关系时可以在关联线上标注角色名，一般使用一个表示两者之间关系的动词或者名词表示角色名（有时该名词为实例对象名） ，关系的两端代表两种不同的角色，因此在一个关联关系中可以包含两个角色名，角色名不是必须的 ，可以根据需要增加 ， 其目的是使类之间的关系更加明确 。</p><pre><code class=" mermaid">classDiagramclass LoginForm &#123;- loginButton : JButton&#125;JButton &lt;-- LoginForm : contains</code></pre><p>对应的Java代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginForm</span> &#123;<br>    <span class="hljs-keyword">private</span> JButton loginButton; <span class="hljs-comment">//定义为成员变量</span><br>    ...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JButton</span> &#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>在UML中，关联关系包含以下集中形式：</p><ol><li><p>双向关联</p><p>在默认情况下关联是双向的。例如顾客(Customer)购买商品(Product)并拥有商品，反之，卖出的商品总有某个顾客与之相关联。 因此，Customer 类和 Product 类之间具有双向关联关系， 如下图：</p><pre><code class=" mermaid">classDiagramclass Customer &#123;- products : Product[]&#125;class Product &#123;- customer : Customer&#125;Customer &quot;purchases&quot; -- &quot;is sold to&quot; Product</code></pre><p>对应的Java片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Customer</span> &#123;<br>    <span class="hljs-keyword">private</span> Productor[] products;<br>    ...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Product</span> &#123;<br>    <span class="hljs-keyword">private</span> Customer customer;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>单向关联</p><p>类的关联关系也可以是单向的，单向关联用带箭头的实线表示。例如顾客(Customer)拥有地址 (Address), 则Customer类与Address类具有单向关联关系，如下图：</p><pre><code class=" mermaid">classDiagramCustomer --&gt; Address : hasclass Customer &#123;- address : Address&#125;</code></pre><p>对应的Java片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Customer</span> &#123;<br><span class="hljs-keyword">private</span> Address address;<br>    ...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Address</span> &#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>自关联</p><p>在系统中可能会存在一些类的属性对象类型为该类本身 ， 这种特殊的关联关系称为自关联。 例如一个结点类(Node)的成员又是结点 Node 类型的对象 ，如下图：</p><pre><code class=" mermaid">classDiagramclass Node &#123;- subNode : Node&#125;Node --&gt; Node : contains</code></pre><p>对应的Java代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Node</span> &#123;<br>    <span class="hljs-keyword">private</span> Node subNode;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>多重性关联</p><p>多重性关联关系又称为重数性(Multiplicity)关联关系，表示两个关联对象在数量上的对应关系。 在UML中对象之间的多重性可以直接在关联直线上用一个数字或一个数字范围表示。</p><p>常见的多重性表示方式如下表所示：</p><table>    <caption>多重性表示方式表</caption>    <tr>        <th>表示方式</th>        <th>多重性说明</th>    </tr>    <tr>        <td>1. .1</td>        <td>表示另—个类的一个对象只与该类的一个对象有关系</td>    </tr>    <tr>        <td>0. .*</td>        <td>表示另—个类的一个对象与该类的零个或多个对象有关系</td>    </tr>    <tr>        <td>1. .*</td>        <td>表示另—个类的一个对象只与该类的一个对象或多个对象有关系</td>    </tr>    <tr>        <td>0. .1</td>        <td>表示另—个类的一个对象没有或只与该类的一个对象有关系</td>    </tr>    <tr>        <td>m. .n</td>        <td>表示另—个类的一个对象与该类最少m最多n个对象有关系(m <= n)</td>    </tr></table><p>例如一个界面(Form)可以拥有零个或多个按钮(Button) ，但是一个按钮只能属于一个界面， 因此一个Form类的对象可以与零个或多个Button类的对象相关联， 但一个Button类的对象只能与一个Form类的对象关联 ，如图所示：</p><pre><code class=" mermaid">classDiagramForm &quot;1. .1&quot; --&gt; &quot;0. .*&quot; Buttonclass Form &#123;- buttons : Button[]&#125;</code></pre><p>对应的Java代码片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Form</span> &#123;<br><span class="hljs-keyword">private</span> Button[] button; <span class="hljs-comment">//定义一个集合对象</span><br>    ...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Button</span> &#123;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>聚合关系</p><p>聚合(Aggregation)关系表示整体与部分的关系 。 在聚合关系中 ，成员对象是整体对象的一部分 ，但是成员对象可以脱离整体对象独立存在。 在UML中 ，聚合关系用带空心菱形的直线表示 。 例如汽车发动机(Engine)是汽车(Car)的组成部分 ，但是汽车发动机可以独立存在 ， 因此汽车和发动机是聚合关系，如图所示：</p><pre><code class=" mermaid">classDiagramclass Car &#123;-engine : Engine+Car(Engine engine)+setEngine(Engine engine) void&#125;Car o--&gt; Engine : cotains</code></pre><p>对应的Java代码片段如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span> &#123;<br><span class="hljs-keyword">private</span> Engine engine;<br><span class="hljs-comment">//构造注入</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">Car</span><span class="hljs-params">( Engine engine)</span>&#123;<br><span class="hljs-built_in">this</span>.engine = engine;<br>)<br><span class="hljs-comment">//设值注入</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEngine</span><span class="hljs-params">(Engine engine)</span>&#123;<br><span class="hljs-built_in">this</span>.engine = engine;<br>)<br>)<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Engine</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>组合关系</p><p>组合(Composition)关系也表示类之间整体和部分的关系，但是在组合关系中整体对象可以控制成员对象的生命周期，<em>一旦整体对象不存在，成员对象也将不存在，成员对象与整体对象之间具有同生共死的关系</em>。 在UML中，组合关系用带实心菱形的直线表示 。 例如人的头(Head)与嘴巴(Mouth) ， 嘴巴是头的组成部分之一， 而且如果头没了， 嘴巴也就没了，因此头和嘴巴是组合关系，如图所示:</p><pre><code class=" mermaid">classDiagramclass Head &#123;-mouth : Mouth+Head()&#125;callback Head &quot;callbackFunction&quot; &quot;This is a tooltip for a callback&quot;Head *--&gt; Mouth : has</code></pre><p>Java代码片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Head</span> &#123;<br>    <span class="hljs-keyword">private</span> Mouth mouth;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Head</span><span class="hljs-params">()</span> &#123;<br>        mouth = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mouth</span>();<span class="hljs-comment">//实例化成员类</span><br>    &#125;<br>...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Mouth</span> &#123;<br>...<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h4 id="2-3-2-依赖关系"><a href="#2-3-2-依赖关系" class="headerlink" title="2.3.2 依赖关系"></a>2.3.2 依赖关系</h4><p><strong>依赖(Dependency )关系</strong>是一种使用关系 ，特定事物的改变有可能会影响到使用该事物的其他事物， 在需要表示一个事物使用另一个事物时使用依赖关系。 在大多数情况下， 依赖关系体现在某个类的方法使用另一个类的对象作为参数。 在UML中， 依赖关系用<strong>带箭头的虚线</strong>表示， 由依赖 的一方指向被依赖 的一方 。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/UML.svg"></p><p>对应的Java代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Driver</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">drive</span><span class="hljs-params">(Car car)</span> &#123;<br>        car.move();<br>    &#125;<br>    ...<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">move</span><span class="hljs-params">()</span> &#123;<br>        ...<br>    &#125;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>在系统实现阶段， 依赖关系通常通过3种方式来实现：</p><p>第一种（也是最常用的一种方式） 将一个类的对象作为另一个类中方法的参数(如上例)；</p><p>第二种方式是在一个类的方法中将另一个类的对象作为其局部变量；</p><p>第三种方式是在一个类的方法中调用另一个类的静态方法。</p><h4 id="2-3-3-泛化关系"><a href="#2-3-3-泛化关系" class="headerlink" title="2.3.3 泛化关系"></a>2.3.3 泛化关系</h4><p><strong>泛化(Generalization)关系</strong>也就是<strong>继承关系</strong> ，用于描述父类与子类之间的关系 ， 父类又称作基类或超类， 子类又称作派生类。 在UML中， 泛化关系用<strong>带空心三角形的直线</strong>来表示 。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/SoWkIImgAStDuUNYvU9CpaaiBbO8I2qgpizJg0OAS2hd9UQcAbWf19SKPUQbWqKIqq42cNab89vsRdvPgeOcKA0iFpC5B5ASM8aiK0itDxYaD2KrhqGXjQ8aDIy5rHxTOeYaNpwAPTeWOHp6XQGc9cUa5c4thWGYYMuSM1ZDE5uk1w1-O1000000.svg"></p><p>对应的Java片段如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 父类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br><span class="hljs-keyword">protected</span> String name;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">move</span><span class="hljs-params">()</span> &#123;<br>    ...<br>    &#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">say</span><span class="hljs-params">()</span> &#123;<br>    ...<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String studentNo;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">study</span><span class="hljs-params">()</span> &#123;<br>    ...<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-keyword">private</span> String teacherNo;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">teach</span><span class="hljs-params">()</span> &#123;<br>        ...<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-3-4-接口与实现关系"><a href="#2-3-4-接口与实现关系" class="headerlink" title="2.3.4 接口与实现关系"></a>2.3.4 接口与实现关系</h4><p>在 UML 中用与类的表示法类似的方式表示接口，接口之间也可以有与类之间关系类似的继承关系和依赖关系，但是接口和类之间还存在一种<strong>实现(Realization)关系</strong>，在这种关系中类实现了接口，类中的操作实现了接口中所声明的操作。在UML中，类与接口之间的实现关系用<strong>带空心三角形的虚线</strong>来表示。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/SoWkIImgAStDKNYwRjxplWrFMpS_txmRo7wohvkNgoIp92SLgmndPbv9Qb5QOdAgWcDUPcvYZeAD3Lp8pguQg89JEpU_B5L3Ky5AeIm_CmKiKfnVcfU2B5JBomKay_9BKXMIyajAydCLyjEW9e8qFEjR-hH_yVDPBQ6-Fazdxtk-P1TGD3KlHG6a0wmLuOwmr8pCPA1pYN08nDRadCJYOeNWZCm2XSpSWfpKtDIyacAOCOGrEYSMOT6dW5EZ0z3Tm8060000.svg"></p><p>对应的Java代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Vehicle</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">move</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Ship</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Vehicle</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">move</span><span class="hljs-params">()</span> &#123;<br>        ...<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Vehicle</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">move</span><span class="hljs-params">()</span> &#123;<br>        ...<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UML类图&quot;&gt;&lt;a href=&quot;#UML类图&quot; class=&quot;headerlink&quot; title=&quot;UML类图&quot;&gt;&lt;/a&gt;UML类图&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;1-UML概述&quot;&gt;&lt;a href=&quot;#1-UML概述&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="Java" scheme="https://www.ckxgzxa.top/categories/Java/"/>
    
    <category term="UML" scheme="https://www.ckxgzxa.top/categories/Java/UML/"/>
    
    
  </entry>
  
  <entry>
    <title>java.util.function 接口的基本命名规则</title>
    <link href="https://www.ckxgzxa.top/InterfaceNaming.html"/>
    <id>https://www.ckxgzxa.top/InterfaceNaming.html</id>
    <published>2022-04-15T17:47:53.000Z</published>
    <updated>2022-04-29T05:19:37.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java-util-function-接口的命名规则"><a href="#java-util-function-接口的命名规则" class="headerlink" title="java.util.function 接口的命名规则"></a>java.util.function 接口的命名规则</h2><ol><li>如果接口只处理对象，而不是基本类型，那就会用一个直截了当的名字，像 Function、Consumer和Predicate等。参数类型通过泛型添加。</li><li>若接口接受一个基本类型的参数，则会用名字的第一部分来表示，例如LongConsumer、DoubleFunction和Predicate等。参数类型会通过泛型添加。</li><li>若接口返回的是基本类型的结果，则会用 To 来表示，例如 ToLongFunction&lt;T&gt; 和 IntToLongFunction。</li><li>若接口返回的类型和参数类型相同，则会被命名为Operator。UnaryOperator用于表示一个参数，BinaryOperator用于表示两个参数。</li><li>若接口接受一个参数并返回 boolean，则会被命名为Predicate。</li><li>若接口接受两个不同类型的参数，则名字中会有一个Bi（比如BiPredicate）。</li></ol><h3 id="java-util-function的目标类型"><a href="#java-util-function的目标类型" class="headerlink" title="java.util.function的目标类型"></a>java.util.function的目标类型</h3><table><thead><tr><th align="left">特点</th><th align="left">函数式方法命名</th><th align="left">用法</th></tr></thead><tbody><tr><td align="left">没有参数；没有返回值</td><td align="left"><code>Runnable</code> (java.lang) <code>run()</code></td><td align="left"><code>Runnable</code></td></tr><tr><td align="left">没有参数；可以返回任何类型</td><td align="left"><code>Supplier</code> <code>get()</code> <code>getAs</code>type<code>()</code></td><td align="left"><code>Supplier&lt;T&gt;</code> <code>BooleanSupplier</code> <code>IntSupplier</code> <code>LongSupplier</code> <code>DoubleSupplier</code></td></tr><tr><td align="left">没有参数；可以返回任何类型</td><td align="left"><code>Callable</code> (java.util.concurrent) <code>call()</code></td><td align="left"><code>Callable&lt;V&gt;</code></td></tr><tr><td align="left">一个参数；没有返回值</td><td align="left"><code>Consumer</code> <code>accept()</code></td><td align="left"><code>Consumer&lt;T&gt;</code> <code>IntConsumer</code> <code>LongConsumer</code> <code>DoubleConsumer</code></td></tr><tr><td align="left">两个参数的<code>Consumer</code></td><td align="left"><code>BiConsumer</code> <code>accept()</code></td><td align="left"><code>BiConsumer&lt;T,U&gt;</code></td></tr><tr><td align="left">两个参数的<code>Consumer</code>；第一个参数是引用，第二个参数是基本类型</td><td align="left"><code>Obj</code>type<code>Consumer</code> <code>accept()</code></td><td align="left"><code>ObjIntConsumer&lt;T&gt;</code> <code>ObjLongConsumer&lt;T&gt;</code> <code>ObjDoubleConsumer&lt;T&gt;</code></td></tr><tr><td align="left">一个参数；返回值为不同类型</td><td align="left"><code>Function</code> <code>apply()</code> <code>To</code>type &amp; type<code>To</code>type: <code>applyAs</code>type<code>()</code></td><td align="left"><code>Function&lt;T,R&gt;</code> <code>IntFunction&lt;R&gt;</code> <code>LongFunction&lt;R&gt;</code> <code>DoubleFunction&lt;R&gt;</code> <code>ToIntFunction&lt;T&gt;</code> <code>ToLongFunction&lt;T&gt;</code> <code>ToDoubleFunction&lt;T&gt;</code> <code>IntToLongFunction</code> <code>IntToDoubleFunction</code> <code>LongToIntFunction</code> <code>LongToDoubleFunction</code> <code>DoubleToIntFunction</code> <code>DoubleToLongFunction</code></td></tr><tr><td align="left">一个参数；返回值为相同类型</td><td align="left"><code>UnaryOperator</code> <code>apply()</code></td><td align="left"><code>UnaryOperator&lt;T&gt;</code> <code>IntUnaryOperator</code> <code>LongUnaryOperator</code> <code>DoubleUnaryOperator</code></td></tr><tr><td align="left">两个相同类型的参数；返回值也是相同类型</td><td align="left"><code>BinaryOperator</code> <code>apply()</code></td><td align="left"><code>BinaryOperator&lt;T&gt;</code> <code>IntBinaryOperator</code> <code>LongBinaryOperator</code> <code>DoubleBinaryOperator</code></td></tr><tr><td align="left">两个相同类型的参数；返回<code>int</code></td><td align="left"><code>Comparator</code> (java.util) <code>compare()</code></td><td align="left"><code>Comparator&lt;T&gt;</code></td></tr><tr><td align="left">两个参数；返回<code>boolean</code></td><td align="left"><code>Predicate</code> <code>test()</code></td><td align="left"><code>Predicate&lt;T&gt;</code> <code>BiPredicate&lt;T,U&gt;</code> <code>IntPredicate</code> <code>LongPredicate</code> <code>DoublePredicate</code></td></tr><tr><td align="left">基本类型的参数；返回值也是基本类型</td><td align="left">type<code>To</code>type<code>Function</code> <code>applyAs</code>type<code>()</code></td><td align="left"><code>IntToLongFunction</code> <code>IntToDoubleFunction</code> <code>LongToIntFunction</code> <code>LongToDoubleFunction</code> <code>DoubleToIntFunction</code> <code>DoubleToLongFunction</code></td></tr><tr><td align="left">两个参数；不同类型</td><td align="left"><code>Bi</code>+操作名（方法名会变化）</td><td align="left"><code>BiFunction&lt;T,U,R&gt;</code> <code>BiConsumer&lt;T,U&gt;</code> <code>BiPredicate&lt;T,U&gt;</code> <code>ToIntBiFunction&lt;T,U&gt;</code> <code>ToLongBiFunction&lt;T,U&gt;</code> <code>ToDoubleBiFunction&lt;T,U&gt;</code></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;java-util-function-接口的命名规则&quot;&gt;&lt;a href=&quot;#java-util-function-接口的命名规则&quot; class=&quot;headerlink&quot; title=&quot;java.util.function 接口的命名规则&quot;&gt;&lt;/a&gt;java.uti</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Java" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java/"/>
    
    
    <category term="Java" scheme="https://www.ckxgzxa.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>安卓常见距离单位</title>
    <link href="https://www.ckxgzxa.top/AndroidDistances.html"/>
    <id>https://www.ckxgzxa.top/AndroidDistances.html</id>
    <published>2022-04-07T10:17:47.000Z</published>
    <updated>2022-04-16T04:22:39.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安卓常见距离单位"><a href="#安卓常见距离单位" class="headerlink" title="安卓常见距离单位"></a>安卓常见距离单位</h1><ul><li><strong>px (像素)</strong> : 每个px对应屏幕上的一个点</li><li><strong>dip 或 dp (device independent pixels， 设备独立像素)</strong> : 一种屏幕密度的抽象单位。 在每英寸 160 点的显示器上， 1dip = 1px， dip 与 px。 但随着屏幕密度的改变， dip 与 px 的换算会发生改变。</li><li><strong>sp (scaled pixels， 比例像素)</strong> : 主要处理字体的大小， 可以根据用户的字体大小首选项进行缩放。</li><li><strong>in (英寸)</strong> : 标准长度单位。</li><li><strong>mm (毫米)</strong> : 标准长度单位。</li><li><strong>pt (磅)</strong> : 标准长度单位。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安卓常见距离单位&quot;&gt;&lt;a href=&quot;#安卓常见距离单位&quot; class=&quot;headerlink&quot; title=&quot;安卓常见距离单位&quot;&gt;&lt;/a&gt;安卓常见距离单位&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;px (像素)&lt;/strong&gt; : 每个px对应屏幕上的一个点</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Android" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Android/"/>
    
    
    <category term="Android" scheme="https://www.ckxgzxa.top/tags/Android/"/>
    
    <category term="移动开发" scheme="https://www.ckxgzxa.top/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>构造随机数和随机字符串</title>
    <link href="https://www.ckxgzxa.top/randomthingsofpython.html"/>
    <id>https://www.ckxgzxa.top/randomthingsofpython.html</id>
    <published>2022-03-26T05:20:09.000Z</published>
    <updated>2022-03-26T05:21:58.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Python构造随机数和随机字符串"><a href="#利用Python构造随机数和随机字符串" class="headerlink" title="利用Python构造随机数和随机字符串"></a>利用Python构造随机数和随机字符串</h1><table><thead><tr><th>Python语句</th><th>输出示例</th></tr></thead><tbody><tr><td><code>import random</code> 可以写成：<code>from random import *</code> 此时后面的代码能够简单一点，例如把<code>random.randint</code>直接写为 <code>randint</code></td><td></td></tr><tr><td>在指定范围内生成一个很大的随机整数： <code>print (random.randint(-9999999999999999,10e20))</code></td><td>417715183092046338</td></tr><tr><td>在指定范围内（0到100000）生成一个随机偶数： <code>print (random.randrange(0, 100001, 2))</code></td><td>14908</td></tr><tr><td>生成一个0到1之间的随机浮点数： <code>print (random.random())</code></td><td>0.2856636141181378</td></tr><tr><td>在指定范围内（1到20）生成一个随机浮点数： <code>print (random.uniform(1, 20))</code></td><td>9.81984258258233</td></tr><tr><td>在指定字符中生成一个随机字符： <code>print (random.choice(&#39;abcdefghijklmnopqrst@#$%*()&#39;))</code></td><td>d</td></tr><tr><td>在指定字符中生成指定数量的随机字符： <code>print (random.sample(&#39;utsrqpozyxwvnmlkjihgfedcba&#39;,5))</code></td><td>[‘z’, ‘u’, ‘x’, ‘w’, ‘j’]</td></tr><tr><td><code>import string</code> 若写成 <code>from string import *</code>，下面的<code>string.ascii_letters</code> 改为 <code>ascii_letters</code></td><td></td></tr><tr><td>用a-z、A-Z、0-9生成指定数量的随机字符串： <code>ran_s = &#39;&#39;.join(random.sample(string.ascii_letters + string.digits, 7))print (ran_s)</code></td><td>iCTm6yN</td></tr><tr><td>从多个字符中选取指定数量的字符组成新字符串： <code>print (&#39;&#39;.join(random.sample([&#39;m&#39;,&#39;l&#39;,&#39;i&#39;,&#39;h&#39;,&#39;g&#39;,&#39;k&#39;,&#39;j&#39;,&#39;d&#39;], 5)))</code></td><td>mjlhd</td></tr><tr><td>打乱顺序： <code>items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0] random.shuffle(items)for i in range(0,len(items),1): #逐个打印 print (items[i],&quot; &quot;,end=&#39;&#39;)</code></td><td>1 0 8 3 5 7 9 4 6 2###</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用Python构造随机数和随机字符串&quot;&gt;&lt;a href=&quot;#利用Python构造随机数和随机字符串&quot; class=&quot;headerlink&quot; title=&quot;利用Python构造随机数和随机字符串&quot;&gt;&lt;/a&gt;利用Python构造随机数和随机字符串&lt;/h1&gt;&lt;tabl</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS 层叠样式表</title>
    <link href="https://www.ckxgzxa.top/CSSLearning.html"/>
    <id>https://www.ckxgzxa.top/CSSLearning.html</id>
    <published>2022-03-26T02:05:54.000Z</published>
    <updated>2022-03-27T14:12:08.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS学习"><a href="#CSS学习" class="headerlink" title="CSS学习"></a>CSS学习</h1><p>CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/blogpictures/202203271734537.jpeg" alt="img"></p><p><strong>选择符：</strong>又称选择器，指明网页中要应用样式规则的元素，如本例中是网页中所有的段（p）的文字将变成蓝色，而其他的元素（如ol）不会受到影响。</p><p><strong>声明：</strong>在英文大括号“｛｝”中的的就是声明，属性和值之间用英文冒号“：”分隔。当有多条声明时，中间可以英文分号“;”分隔，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">12px</span>;<span class="hljs-attribute">color</span>:red;&#125;<br></code></pre></td></tr></table></figure><p>注意：</p><p>1、最后一条声明可以没有分号，但是为了以后修改方便，一般也加上分号。</p><p>2、为了使用样式更加容易阅读，可以将每条代码写在一个新行内，如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span>&#123;<br>   <span class="hljs-attribute">font-size</span>:<span class="hljs-number">12px</span>;<br>   <span class="hljs-attribute">color</span>:red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>就像在Html的注释一样，在CSS中也有注释语句：用<code>/*注释语句*/</code>来标明（Html中使用<code>&lt;!--注释语句--&gt;</code>)。就像下面代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">p</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>; <span class="hljs-comment">/*设置文字子号为12px*/</span><br>    <span class="hljs-attribute">color</span>: red; <span class="hljs-comment">/*设置文字颜色为红色*/</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h3><p><em>不要在属性值与单位之间留有空格（如：”margin-left: 20 px” ），正确的写法是 “margin-left: 20px” 。</em></p><h4 id="内联式"><a href="#内联式" class="headerlink" title="内联式"></a>内联式</h4><p>CSS样式可以写在哪些地方呢？从CSS 样式代码插入的形式来看基本可以分为以下3种：内联式、嵌入式和外部式三种。这一小节先来讲解内联式。</p><p><code>内联式</code>css样式表就是把css代码直接写在现有的HTML标签中，如下面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red&quot;</span>&gt;</span>这里文字是红色。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注意要写在元素的开始标签里，下面这种写法是错误的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这里文字是红色。&lt;/p style=&quot;color:red&quot;&gt;<br></code></pre></td></tr></table></figure><p>并且css样式代码要写在style=””双引号中，如果有多条css样式代码设置可以写在一起，中间用分号隔开。如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red;font-size:12px&quot;</span>&gt;</span>这里文字是红色。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="嵌入式-内部"><a href="#嵌入式-内部" class="headerlink" title="嵌入式/内部"></a>嵌入式/内部</h4><p>嵌入式css样式，就是可以把css样式代码写在**<style type="text/css"></style>**标签之间。如下面代码实现把三个<span>标签中的文字设置为红色：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-tag">span</span>&#123;</span><br><span class="language-css"><span class="hljs-attribute">color</span>:red;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>嵌入式css样式必须写在<code>&lt;style&gt;``&lt;/style&gt;</code>之间，并且一般情况下嵌入式css样式写在<code>&lt;head&gt;``&lt;/head&gt;</code>之间。如右边编辑器中的代码。</p><h4 id="外部式"><a href="#外部式" class="headerlink" title="外部式"></a>外部式</h4><p>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“<code>.css</code>”为扩展名，在<code>&lt;head&gt;</code>内（不是在<code>&lt;style&gt;</code>标签内）使用<code>&lt;link&gt;</code>标签将css样式文件链接到HTML文件内，如下面代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mystyle.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mystyle.css : </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hr &#123;<span class="hljs-attribute">color</span>:sienna;&#125;<br><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">margin-left</span>:<span class="hljs-number">20px</span>;&#125;<br><span class="hljs-selector-tag">body</span> &#123;<span class="hljs-attribute">background-image</span>:<span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;/images/back40.gif&quot;</span>);&#125;<br></code></pre></td></tr></table></figure><p>注意：</p><ol><li><p>css样式文件名称以有意义的英文字母命名，如 main.css。</p></li><li><p>rel=”stylesheet” type=”text/css” 是固定写法不可修改。</p></li><li><p><code>&lt;link&gt;</code>标签位置一般写在<code>&lt;head&gt;</code>标签之内。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS学习&quot;&gt;&lt;a href=&quot;#CSS学习&quot; class=&quot;headerlink&quot; title=&quot;CSS学习&quot;&gt;&lt;/a&gt;CSS学习&lt;/h1&gt;&lt;p&gt;CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端" scheme="https://www.ckxgzxa.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>HTML中的&lt;head&gt;标签</title>
    <link href="https://www.ckxgzxa.top/HTML-head.html"/>
    <id>https://www.ckxgzxa.top/HTML-head.html</id>
    <published>2022-03-24T03:44:09.000Z</published>
    <updated>2022-04-07T10:30:45.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML中的-lt-head-gt-标签"><a href="#HTML中的-lt-head-gt-标签" class="headerlink" title="HTML中的 &lt;head&gt;标签"></a>HTML中的 <code>&lt;head&gt;</code>标签</h1><h3 id="Metadata-HTML中的元数据"><a href="#Metadata-HTML中的元数据" class="headerlink" title="Metadata-HTML中的元数据"></a>Metadata-HTML中的元数据</h3><p>HTML <code>&lt;head&gt;</code>元素与 <code>&lt;body&gt;</code>元素不同，它的内容不会在浏览器中显示，它的作用是保存页面的一些 元数据。</p><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p><code>&lt;title&gt;</code>元素是一项元数据，用于表示整个 HTML 文档的标题（而不是文档内容）。</p><h4 id="原数据-lt-meta-gt-元素"><a href="#原数据-lt-meta-gt-元素" class="headerlink" title="原数据 &lt;meta&gt;元素"></a>原数据 <code>&lt;meta&gt;</code>元素</h4><p><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code> : 这个元素简单的指定了文档的字符编码 —— 在这个文档中被允许使用的字符集。</p><h4 id="属性"><a href="#属性" class="headerlink" title="属性:"></a>属性:</h4><ul><li><code>&lt;name&gt;</code> : 指定了meta 元素的类型； 说明该元素包含了什么类型的信息。</li><li><code>&lt;content&gt;</code> :  指定了实际的元数据内容。</li></ul><h3 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h3><ol><li><p>将其保存在与网站的索引页面相同的目录中，以.ico格式保存（大多数浏览器将支持更通用的格式，如.gif或.png，但使用ICO格式将确保它能在如Internet Explorer 6一样久远的浏览器显示）</p></li><li><p>将以下行添加到HTML <code>&lt;head&gt;</code>中以引用它：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;shortcut icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;favicon.ico&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="应用CSS和JavaScript"><a href="#应用CSS和JavaScript" class="headerlink" title="应用CSS和JavaScript"></a>应用CSS和JavaScript</h3><ul><li><code>link</code>元素经常位于文档的头部。这个link元素有2个属性，rel=”stylesheet”表明这是文档的样式表，而 href包含了样式表文件的路径：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;my-css-file.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><code>&lt;script&gt;</code>部分没必要非要放在文档头部；实际上，把它放在文档的尾部（在 <code>&lt;/body&gt;标签之前</code>）是一个更好的选择，这样可以确保在加载脚本之前浏览器已经解析了HTML内容（如果脚本加载某个不存在的元素，浏览器会报错）。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;my-js-file.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="文档主语言"><a href="#文档主语言" class="headerlink" title="文档主语言"></a>文档主语言</h3><p>在<code>&lt;html&gt;</code>中添加<code>lang</code>属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML中的-lt-head-gt-标签&quot;&gt;&lt;a href=&quot;#HTML中的-lt-head-gt-标签&quot; class=&quot;headerlink&quot; title=&quot;HTML中的 &amp;lt;head&amp;gt;标签&quot;&gt;&lt;/a&gt;HTML中的 &lt;code&gt;&amp;lt;head&amp;gt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://www.ckxgzxa.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML" scheme="https://www.ckxgzxa.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML常见标签</title>
    <link href="https://www.ckxgzxa.top/htmllearning.html"/>
    <id>https://www.ckxgzxa.top/htmllearning.html</id>
    <published>2022-03-23T23:44:09.000Z</published>
    <updated>2022-04-07T10:31:13.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-学习"><a href="#HTML-学习" class="headerlink" title="HTML 学习"></a>HTML 学习</h1><h2 id="HTML文档"><a href="#HTML文档" class="headerlink" title="HTML文档"></a>HTML文档</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>我的测试站点<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是我的页面<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>分析如下:</p><ol><li><code>&lt;!DOCTYPE html&gt;</code>: 声明文档类型.</li><li><code>&lt;html&gt;&lt;/html&gt;</code>: <code>&lt;html&gt;</code>元素。这个元素包裹了整个完整的页面，是一个根元素。</li><li><code>&lt;head&gt;&lt;/head&gt;</code>: <code>&lt;head&gt;</code>元素。这个元素是一个容器，包含所有想包含在HTML页面中但不想在HTML页面中显示的内容。这些内容包括你想在搜索结果中出现的关键字和页面描述，CSS样式，字符集声明等等。</li><li><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>: 这个元素设置文档使用utf-8字符集编码，utf-8字符集包含了人类大部分的文字。基本上他能识别你放上去的所有文本内容。毫无疑问要使用它，并且它能在以后避免很多其他问题。</li><li><code>&lt;title&gt;&lt;/title&gt;</code>: 设置页面标题，出现在浏览器标签上。</li><li><code>&lt;body&gt;&lt;/body&gt;</code>: <code>&lt;body&gt;</code>元素。 包含了你访问页面时所有显示在页面上的内容，文本，图片，音频，游戏等等。</li></ol><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>主标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>顶层标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>子标题<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span>次子标题<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><h1>主标题</h1><h2>顶层标题</h2><h3>子标题</h3><h4>次子标题</h4></blockquote><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是一个段落<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>精彩少年<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>美丽突然出现<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>触动心灵的旋律<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><ul>  <li>精彩少年</li>  <li>美丽突然出现</li>  <li>触动心灵的旋律</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>前端开发面试心法 <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>零基础学习html<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>JavaScript全攻略<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure><ol>   <li>前端开发面试心法 </li>   <li>零基础学习html</li>   <li>JavaScript全攻略</li></ol><h4 id="描述列表"><a href="#描述列表" class="headerlink" title="描述列表"></a>描述列表</h4><p>描述列表使用与其他列表类型不同的闭合标签— <code>&lt;dl&gt;</code>; 此外，每一项都用 <code>&lt;dt&gt;</code>元素闭合。每个描述都用元素 <code>&lt;dd&gt;</code>闭合。</p><p>浏览器的默认样式会在<strong>描述列表的描述部分</strong>（description definition）和<strong>描述术语</strong>（description terms）之间产生缩进。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>内心独白<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>戏剧中，某个角色对自己的内心活动或感受进行念白表演，这些台词只面向观众，而其他角色不会听到。<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>语言独白<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>戏剧中，某个角色把自己的想法直接进行念白表演，观众和其他角色都可以听到。<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>旁白<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>戏剧中，为渲染幽默或戏剧性效果而进行的场景之外的补充注释念白，只面向观众，内容一般都是角色的感受、想法、以及一些背景信息等。<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure><dl>  <dt>内心独白</dt>    <dd>戏剧中，某个角色对自己的内心活动或感受进行念白表演，这些台词只面向观众，而其他角色不会听到。</dd>  <dt>语言独白</dt>    <dd>戏剧中，某个角色把自己的想法直接进行念白表演，观众和其他角色都可以听到。</dd>  <dt>旁白</dt>    <dd>戏剧中，为渲染幽默或戏剧性效果而进行的场景之外的补充注释念白，只面向观众，内容一般都是角色的感受、想法、以及一些背景信息等。</dd></dl><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>a标签有的 <code>target</code>属性，代表打开网页的方式。可选值为”<code>_self</code>和 <code>_blank</code>”，默认值为 <code>_self</code>，代表在当前页面打开链接，<code>_blank</code>代表在新窗口打开链接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;目标网址&quot;</span>  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;鼠标滑过显示的文本&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>链接显示的文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="发送电子邮件"><a href="#发送电子邮件" class="headerlink" title="发送电子邮件"></a>发送电子邮件</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:nowhere@mozilla.org&quot;</span>&gt;</span>向 nowhere 发邮件<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;a href=&quot;mailto:nowhere@mozilla.org&quot;&gt;</code>向 nowhere 发邮件<code>&lt;/a&gt;</code></p><p>主题(subject)、抄送(cc)和主体(body):</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;</span>&gt;</span><br>  Send mail with cc, bcc, subject and body<br><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><a href="mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&bcc=name3@rapidtables.com&subject=The%20subject%20of%20the%20email&body=The%20body%20of%20the%20email">  Send mail with cc, bcc, subject and body</a><h3 id="HTML的特殊字符"><a href="#HTML的特殊字符" class="headerlink" title="HTML的特殊字符"></a>HTML的特殊字符</h3><table><thead><tr><th align="left">原义字符</th><th align="left">等价字符引用</th></tr></thead><tbody><tr><td align="left">&lt;</td><td align="left">&amp;lt;</td></tr><tr><td align="left">&gt;</td><td align="left">&amp;gt;</td></tr><tr><td align="left">“</td><td align="left">&amp;quot;</td></tr><tr><td align="left">‘</td><td align="left">&amp;apos;</td></tr><tr><td align="left">&amp;</td><td align="left">&amp;amp;</td></tr></tbody></table><h3 id="HTML注释"><a href="#HTML注释" class="headerlink" title="HTML注释"></a>HTML注释</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- &lt;p&gt;我在注释内！&lt;/p&gt; --&gt;</span><br></code></pre></td></tr></table></figure><h3 id="自定义文字样式"><a href="#自定义文字样式" class="headerlink" title="自定义文字样式"></a>自定义文字样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span> <span class="hljs-attr">cite</span>=<span class="hljs-string">&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>The <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>HTML <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> Element<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> (or <span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>HTML Block<br>  Quotation Element<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>) indicates that the enclosed text is an extended quotation.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote cite="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote">  <p>The <strong>HTML <code><blockquote></code> Element</strong> (or <em>HTML Block  Quotation Element</em>) indicates that the enclosed text is an extended quotation.</p></blockquote><h4 id="行内引用"><a href="#行内引用" class="headerlink" title="行内引用"></a>行内引用</h4><p><code>&lt;q&gt;</code> : 浏览器默认将其作为普通文本放入引号内表示引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>The quote element — <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">q</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> — is <span class="hljs-tag">&lt;<span class="hljs-name">q</span> <span class="hljs-attr">cite</span>=<span class="hljs-string">&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q&quot;</span>&gt;</span>intended<br>for short quotations that don&#x27;t require paragraph breaks.<span class="hljs-tag">&lt;/<span class="hljs-name">q</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>The quote element — <code><q></code> — is <q cite="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q">intendedfor short quotations that don't require paragraph breaks.</q></p><h3 id="缩略语"><a href="#缩略语" class="headerlink" title="缩略语"></a>缩略语</h3><p><code>&lt;abbr&gt;</code>常被用来包裹一个缩略语或缩写，并且提供缩写的解释（包含在 <code>&lt;title&gt;</code>属性中）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我们使用 <span class="hljs-tag">&lt;<span class="hljs-name">abbr</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;超文本标记语言（Hyper text Markup Language）&quot;</span>&gt;</span>HTML<span class="hljs-tag">&lt;/<span class="hljs-name">abbr</span>&gt;</span> 来组织网页文档。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>第 33 届 <span class="hljs-tag">&lt;<span class="hljs-name">abbr</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;夏季奥林匹克运动会&quot;</span>&gt;</span>奥运会<span class="hljs-tag">&lt;/<span class="hljs-name">abbr</span>&gt;</span> 将于 2024 年 8 月在法国巴黎举行。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我们使用 <abbr title="超文本标记语言（Hyper text Markup Language）">HTML</abbr> 来组织网页文档。</p><p>第 33 届 <abbr title="夏季奥林匹克运动会">奥运会</abbr> 将于 2024 年 8 月在法国巴黎举行。</p><h3 id="标记联系方式"><a href="#标记联系方式" class="headerlink" title="标记联系方式"></a>标记联系方式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">address</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Page written by <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;../authors/chris-mills/&quot;</span>&gt;</span>Chris Mills<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">address</span>&gt;</span><br></code></pre></td></tr></table></figure><address>  <p>Page written by <a href="../authors/chris-mills/">Chris Mills</a>.</p></address><h3 id="上标和下标"><a href="#上标和下标" class="headerlink" title="上标和下标"></a>上标和下标</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>咖啡因的化学方程式是 C<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>8<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span>H<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>10<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span>N<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span>O<span class="hljs-tag">&lt;<span class="hljs-name">sub</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">sub</span>&gt;</span>。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>如果 x<span class="hljs-tag">&lt;<span class="hljs-name">sup</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">sup</span>&gt;</span> 的值为 9，那么 x 的值必为 3 或 -3。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>咖啡因的化学方程式是 C<sub>8</sub>H<sub>10</sub>N<sub>4</sub>O<sub>2</sub>。</p><p>如果 x<sup>2</sup> 的值为 9，那么 x 的值必为 3 或 -3。</p><h3 id="展示计算机代码"><a href="#展示计算机代码" class="headerlink" title="展示计算机代码"></a>展示计算机代码</h3><ul><li><code>&lt;code&gt;</code> : 用于标记计算机通用代码。</li><li><code>&lt;pre&gt;</code> : 用于保留空白字符（通常用于代码块）。</li><li><code>&lt;var&gt;</code> : 用于标记具体变量名。</li><li><code>&lt;kbd&gt;</code> : 用于标记输入电脑的键盘（或其他类型）输入。</li><li><code>&lt;samp&gt;</code> : 用于标记计算机程序的输出。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>const para = document.querySelector(&#x27;p&#x27;);<br><br>para.onclick = function() &#123;<br>  alert(&#x27;噢，噢，噢，别点我了。&#x27;);<br>&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>请不要使用 <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> 、 <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> 等表象元素。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>在上述的 JavaScript 示例中，<span class="hljs-tag">&lt;<span class="hljs-name">var</span>&gt;</span>para<span class="hljs-tag">&lt;/<span class="hljs-name">var</span>&gt;</span> 表示一个段落元素。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>按 <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>Ctrl<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span>/<span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>Cmd<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span> + <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span> 选择全部内容。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">pre</span>&gt;</span>$ <span class="hljs-tag">&lt;<span class="hljs-name">kbd</span>&gt;</span>ping mozilla.org<span class="hljs-tag">&lt;/<span class="hljs-name">kbd</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">samp</span>&gt;</span>PING mozilla.org (63.245.215.20): 56 data bytes<br>64 bytes from 63.245.215.20: icmp_seq=0 ttl=40 time=158.233 ms<span class="hljs-tag">&lt;/<span class="hljs-name">samp</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><pre><code>const para = document.querySelector('p');para.onclick = function() &#123;  alert('噢，噢，噢，别点我了。');&#125;</code></pre><p>请不要使用 <code><font></code> 、 <code><center></code> 等表象元素。</p><p>在上述的 JavaScript 示例中，<var>para</var> 表示一个段落元素。</p><p>按 <kbd>Ctrl</kbd>/<kbd>Cmd</kbd> + <kbd>A</kbd> 选择全部内容。</p><pre>$ <kbd>ping mozilla.org</kbd><samp>PING mozilla.org (63.245.215.20): 56 data bytes64 bytes from 63.245.215.20: icmp_seq=0 ttl=40 time=158.233 ms</samp></pre><hr><h3 id="时间和日期"><a href="#时间和日期" class="headerlink" title="时间和日期"></a>时间和日期</h3><p><code>&lt;time&gt;</code> 元素 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-01-20&quot;</span>&gt;</span>2016年1月20日<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 标准简单日期 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-01-20&quot;</span>&gt;</span>20 January 2016<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 只包含年份和月份--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-01&quot;</span>&gt;</span>January 2016<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 只包含月份和日期 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;01-20&quot;</span>&gt;</span>20 January<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 只包含时间，小时和分钟数 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;19:30&quot;</span>&gt;</span>19:30<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 还可包含秒和毫秒 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;19:30:01.856&quot;</span>&gt;</span>19:30:01.856<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 日期和时间 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-01-20T19:30&quot;</span>&gt;</span>7.30pm, 20 January 2016<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 含有时区偏移值的日期时间 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-01-20T19:30+01:00&quot;</span>&gt;</span>7.30pm, 20 January 2016 is 8.30pm in France<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 调用特定的周 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">time</span> <span class="hljs-attr">datetime</span>=<span class="hljs-string">&quot;2016-W04&quot;</span>&gt;</span>The fourth week of 2016<span class="hljs-tag">&lt;/<span class="hljs-name">time</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="区段专用标签"><a href="#区段专用标签" class="headerlink" title="区段专用标签"></a>区段专用标签</h3><ul><li><code>&lt;header&gt;</code> : 页眉。是简介形式的内容。如果它是 <code>&lt;body&gt;</code>的子元素，那么就是网站的全局页眉。如果它是 <code>&lt;body&gt;</code>或 <code>&lt;section&gt;</code>的子元素，那么它是这些部分特有的页眉。</li><li><code>&lt;nav&gt;</code> ：导航栏。包含页面主导航功能。其中不应包含二级链接等内容。</li><li><code>&lt;main&gt;</code> ：主内容。主内容中还可以有各种子内容区段，可用 <code>&lt;article&gt;</code>、<code>&lt;section&gt;</code>  和 <code>&lt;div&gt;</code>等元素表示。存放每个页面独有的内容。每个页面上只能用一次 <code>&lt;main&gt;</code>，且直接位于 <code>&lt;body&gt;</code> 中。最好不要把它嵌套进其它元素。</li><li><code>&lt;article&gt;</code> : 包围的内容即一篇文章，与页面其它部分无关（比如一篇博文）。</li><li><code>&lt;section&gt;</code> : 与 <code>&lt;article&gt;</code> 类似，但 <code>&lt;section&gt;</code> 更适用于组织页面使其按功能（比如迷你地图、一组文章标题和摘要）分块。</li><li><code>&lt;aside&gt;</code> ：侧边栏，经常嵌套在 <code>&lt;main&gt;</code> 中。包含一些间接信息（术语条目、作者简介、相关链接，等等）。</li><li><code>&lt;footer&gt;</code> ：页脚。</li></ul><h3 id="无语义元素"><a href="#无语义元素" class="headerlink" title="无语义元素"></a>无语义元素</h3><p><code>&lt;div&gt;</code> : 块级无语义元素, 应仅用于找不到更好的块级元素时，或者不想增加特定的意义时。</p><p><code>&lt;span&gt; </code> : 是一个内联的（inline）无语义元素，最好只用于无法找到更好的语义元素来包含内容时，或者不想增加特定的含义时。</p><h3 id="换行与水平分割线"><a href="#换行与水平分割线" class="headerlink" title="换行与水平分割线"></a>换行与水平分割线</h3><p><code>&lt;br&gt;</code> : 换行</p><p><code>&lt;hr&gt;</code> : 水平分割线</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><ol><li>src：标识图像的位置；</li><li>alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；</li><li>title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</li><li>图像可以是GIF，PNG，JPEG格式的图像文件。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;图片地址&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;下载失败时的替换文本&quot;</span> <span class="hljs-attr">title</span> = <span class="hljs-string">&quot;提示文本&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 例如 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174519139.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;下载失败&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;时区选择&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;240&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174519139.png" alt="下载失败" title="时区选择" width="240" height="200"><p> HTML5 的 <code>&lt;figure&gt;</code> 和 <code>&lt;figcaption&gt;</code>元素在标题和图片之间建立关联</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">figure</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174519139.png&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;时区选择&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;240&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;200&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">figcaption</span>&gt;</span>这是CentOS系统安装的时区选择界面<span class="hljs-tag">&lt;/<span class="hljs-name">figcaption</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span><br></code></pre></td></tr></table></figure><figure>  <img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174519139.png"     alt="时区选择"     width="240"     height="200">  <figcaption>这是CentOS系统安装的时区选择界面</figcaption></figure><p><code>&lt;figure&gt;</code> 里不一定要是一张图片，</p><p>只要是一个类似的独立内容单元(图片, 代码, 音视频, 方程, 表格等)：</p><ul><li>用简洁、易懂的方式表达意图。</li><li>可以置于页面线性流的某处。</li><li>为主要内容提供重要的补充说明。</li></ul><h4 id="自适应图片"><a href="#自适应图片" class="headerlink" title="自适应图片"></a>自适应图片</h4><p><code>&lt;picture&gt; </code>元素 : picture 元素允许我们在不同的设备上显示不同的图片，一般用于响应式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">picture</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;(min-width: 650px)&quot;</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">&quot;demo1.jpg&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">media</span>=<span class="hljs-string">&quot;(min-width: 465px)&quot;</span> <span class="hljs-attr">srcset</span>=<span class="hljs-string">&quot;demo2.jpg&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;img_girl.jpg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">picture</span>&gt;</span><br></code></pre></td></tr></table></figure><picture>  <source media="(min-width: 650px)" srcset="https://static.runoob.com/images/mix/html-css-js.png">  <source media="(min-width: 465px)" srcset="https://static.runoob.com/images/mix/htmlbig.png">  <img src="https://static.runoob.com/images/mix/img_avatar.png"  style="width:auto;"></picture><p><code>&lt;picture&gt;</code> 元素零或多个 <code>&lt;source&gt; </code>元素和一个 <code>&lt;img&gt;</code>元素，每个 <code> &lt;source&gt;</code> 元素匹配不同的设备并引用不同的图像源，如果没有匹配的，就选择 <code>&lt;img&gt;</code> 元素的 src 属性中的 url。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>创建表格的四个元素: <code>&lt;table&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;th&gt;</code>、<code>&lt;td&gt;</code></p><ol><li><code>&lt;table&gt;</code>…<code>&lt;/table&gt;</code> ：整个表格以 <code>&lt;table&gt;</code>标记开始、<code>&lt;/table&gt;</code>标记结束。</li><li><code>&lt;tr&gt;</code>…<code>&lt;/tr&gt;</code> ：表格的一行，所以有几对 tr 表格就有几行。</li><li><code>&lt;td&gt;</code>…<code>&lt;/td&gt;</code> ：表格的一个单元格，一行中包含几对 <code>&lt;td&gt;</code>…<code>&lt;/td&gt;</code>，说明一行中就有几列。</li><li><code>&lt;th&gt;</code>…<code>&lt;/th&gt;</code>：表格的头部的一个单元格，表格表头。</li><li>表格中列的个数，取决于一行中数据单元格的个数。</li><li>border属性可以为表格添加边框，属性值为数字。</li></ol><p>**注意 : **</p><ol><li>table标签用来定义整个表格，为双标签，必须有结束标签。</li><li>table标签里面可以放caption标签和tr标签。</li><li>caption标签用来定义表格的标题。</li><li>tr标签用来设置表格的行，tr里面只能放th或者td标签，一组tr标签代表一行。</li><li>th用来设置表格的标题，会<strong>加粗居中</strong>显示。也就是th标签中的文本默认为粗体并且居中显示。</li><li>td同来设置表格的列，一组td标签代表一列。</li><li>table表格在没有添加border属性之前, 在浏览器中显示是没有表格线的。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>前端三剑客<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>知识点<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>重要程度<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>难度<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>学习周期<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>html<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>*****<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>***<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>7天<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>css<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>*****<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>****<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>10天<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>js<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>*****<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>*****<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>20天<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><table border="1">        <caption>前端三剑客</caption>        <tr>            <th>知识点</th>            <th>重要程度</th>            <th>难度</th>            <th>学习周期</th>        </tr>        <tr>            <td>html</td>            <td>*****</td>            <td>***</td>            <td>7天</td>        </tr>        <tr>            <td>css</td>            <td>*****</td>            <td>****</td>            <td>10天</td>        </tr>        <tr>            <td>js</td>            <td>*****</td>            <td>*****</td>            <td>20天</td>        </tr>    </table>#### 允许单元格跨多行和列<p><code>rowspan</code> : 设置单元格可纵跨的行数。</p><p><code>colspan</code> : 规定单元格可横跨的列数。</p><h4 id="表格格式化"><a href="#表格格式化" class="headerlink" title="表格格式化"></a>表格格式化</h4><p><code>&lt;colgroup&gt;</code>标签 : 用于对表格中的列进行组合，以便对其进行格式化。通过使用 <code>&lt;colgroup&gt;</code> 标签，可以向整个列应用样式，而不需要重复为每个单元格或每一行设置样式。</p><p><strong>注释：</strong>只能在 <code>&lt;table&gt;</code>元素之内，在任何一个 <code>&lt;caption&gt;</code> 元素之后，在任何一个 <code>&lt;thead&gt;</code>、<code>&lt;tbody&gt;</code>、<code>&lt;tfoot&gt;</code>、<code>&lt;tr&gt; </code>元素之前使用 <code>&lt;colgroup&gt;</code> 标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">colgroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:red&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">col</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:yellow&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">colgroup</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>ISBN<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Price<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>3476896<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>My first HTML<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>$53<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>5869207<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>My first CSS<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>$49<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><table border="1">  <colgroup>    <col span="2" style="background-color:red">    <col style="background-color:yellow">  </colgroup>  <tr>    <th>ISBN</th>    <th>Title</th>    <th>Price</th>  </tr>  <tr>    <td>3476896</td>    <td>My first HTML</td>    <td>$53</td>  </tr>  <tr>    <td>5869207</td>    <td>My first CSS</td>    <td>$49</td>  </tr></table><h4 id="使用thead-tbody-tfoot-定义表格"><a href="#使用thead-tbody-tfoot-定义表格" class="headerlink" title="使用thead, tbody, tfoot 定义表格"></a>使用thead, tbody, tfoot 定义表格</h4><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/2022-03-24/5e91834a000161cc06140254.jpg">)</p><p>表格第一行为表头数据,我们用 <code>&lt;thead&gt;</code>标签包裹,中间的科目和分数为表格的主体内容,我们用 <code>&lt;tbody&gt;</code>标签包裹,最后的总分我们用 <code>&lt;tfoot&gt;</code>标签包裹。</p><ol><li><code>&lt;thead&gt;</code> 标签定义表格的表头。该标签用于组合 HTML 表格的表头内容。</li><li><code>&lt;tbody&gt;…&lt;/tbody&gt;</code>：如果不加 <code>&lt;thead&gt;</code> <code>&lt;tbody&gt;</code> <code>&lt;tfooter&gt;</code> , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不在等整个表格加载完后显示。）</li><li><code>&lt;tfoot&gt;</code> 元素用于对 HTML 表格中的表注（页脚）内容进行分组。</li><li>thead、tfoot 以及 tbody 元素使您有能力对表格中的行进行分组。当您创建某个表格时，您也许希望拥有一个标题行，一些带有数据的行，以及位于底部的一个总计行。这种划分使浏览器有能力支持独立于表格标题和页脚的表格正文滚动。当长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>使用thead、tbody、tfoot标签<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>成绩表<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>科目<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>分数<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>语文<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>99<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>数学<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>60<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tfoot</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>总分<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>159<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tfoot</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3><table border="1">        <thead>            <tr>                <th>科目</th>                <th>分数</th>            </tr>        </thead>        <tbody>            <tr>                <td>语文</td>                <td>99</td>            </tr>            <tr>                <td>数学</td>                <td>60</td>            </tr>        </tbody>        <tfoot>            <tr>                <td>总分</td>                <td>159</td>            </tr>        </tfoot>    </table></h3>#### 表格嵌套<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;table1&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>title1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>title2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>title3<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nested&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;table2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell3<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell3<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell4<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell5<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>cell6<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><table id="table1">  <tr>    <th>title1</th>    <th>title2</th>    <th>title3</th>  </tr>  <tr>    <td id="nested">      <table id="table2">        <tr>          <td>cell1</td>          <td>cell2</td>          <td>cell3</td>        </tr>      </table>    </td>    <td>cell2</td>    <td>cell3</td>  </tr>  <tr>    <td>cell4</td>    <td>cell5</td>    <td>cell6</td>  </tr></table><h3 id="视频和音频内容"><a href="#视频和音频内容" class="headerlink" title="视频和音频内容"></a>视频和音频内容</h3><h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><p><code>&lt;video&gt;</code>标签定义视频，比如电影片段或其他视频流。目前，<code>&lt;video&gt;</code> 元素支持三种视频格式：MP4、WebM、Ogg。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;320&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;240&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;movie.mp4&quot;</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;movie.ogg&quot;</span>  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/ogg&quot;</span>&gt;</span><br>  您的浏览器不支持 HTML5 video 标签。<br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><video width="320" height="240" controls>  <source src="https://www.runoob.com/try/demo_source/movie.mp4"  type="video/mp4">  <source src="movie.ogg"  type="video/ogg">  您的浏览器不支持 HTML5 video 标签。</video><p>属性:</p><ul><li><code>width</code> 和 <code>height</code> : 控制视频的尺寸, 但视频会保持<code>&lt;strong&gt;</code>长宽比<code>&lt;/strong&gt;</code>。</li><li><code>autoplay</code> : 使音频和视频内容立即播放，即使页面的其他部分还没有加载完全。</li><li><code>loop</code> : 让音频或者视频文件循环播放。</li><li><code>muted</code> : 媒体播放时，默认关闭声音。</li><li><code>poster</code> : 指向了一个图像的URL，这个图像会在视频播放前显示。通常用于粗略的预览或者广告。</li><li><code>preload</code> : 用来缓冲较大的文件, 有三个选项:<ul><li><code>&quot;none&quot;</code> : 不缓冲</li><li><code>&quot;auto&quot;</code> : 页面加载后缓存媒体文件</li><li><code>&quot;metadata&quot;</code> : 仅缓冲文件的原数据</li></ul></li></ul><h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><p><code>&lt;audio&gt;</code> 标签定义声音，比如音乐或其他音频流。目前，<code>&lt;audio&gt; </code>元素支持的3种文件格式：MP3、Wav、Ogg。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">controls</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.runoob.com/try/demo_source/horse.ogg&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;audio/ogg&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;horse.mp3&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;audio/mpeg&quot;</span>&gt;</span><br>  您的浏览器不支持 audio 元素。<br><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><audio controls>  <source src="https://www.runoob.com/try/demo_source/horse.ogg" type="audio/ogg">  <source src="horse.mp3" type="audio/mpeg">  您的浏览器不支持 audio 元素。</audio><p>跟 <code>&lt;video&gt;</code>标签相比, 不支持 <code>width</code> / <code>height</code>  和 <code>poster</code> 属性</p><h4 id="音轨文本"><a href="#音轨文本" class="headerlink" title="音轨文本"></a>音轨文本</h4><p><code>&lt;tracker&gt;</code> 标签 为媒体元素（比如 <code> &lt;audio&gt;</code> and <code> &lt;video&gt;</code>）规定外部文本轨道，也就是字幕，字幕格式有 WebVTT 格式（.vtt 格式文件）。这个元素用于规定字幕文件或其他包含文本的文件，当媒体播放时，这些文件是可见的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;320&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;240&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.runoob.com/video/php/friday.mp4&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">track</span> <span class="hljs-attr">default</span></span><br><span class="hljs-tag">           <span class="hljs-attr">kind</span>=<span class="hljs-string">&quot;captions&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">srclang</span>=<span class="hljs-string">&quot;en&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.runoob.com/video/php/friday.vtt&quot;</span> /&gt;</span><br>    抱歉，您的浏览器不支持嵌入视频！<br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><p><video controls width="320" height="240"       src="https://www.runoob.com/video/php/friday.mp4"><br>    <track default           kind="captions"           srclang="en"           src="https://www.runoob.com/video/php/friday.vtt" /><br>    抱歉，您的浏览器不支持嵌入视频！<br></video></p><h3 id="嵌入技术"><a href="#嵌入技术" class="headerlink" title="嵌入技术"></a>嵌入技术</h3><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=19390801&amp;bvid=BV1bW411n7fY&amp;cid=31621681&amp;page=1&quot;</span> </span><br><span class="hljs-tag">    <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> </span><br><span class="hljs-tag">    <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; width: 100%; height: 100%;left: 0; top: 0;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attributes">属性</a></h4><p><code>allowfullscreen</code>]: 如果设置为 <code>true</code>，<code>&lt;iframe&gt;</code>则可以通过全屏API设置为全屏模式。</p><p><code>frameborder</code> : 如果设置为1，则会告诉浏览器在此框架和其他框架之间绘制边框，这是默认行为。0删除边框。不推荐这样设置，因为在CSS中可以更好地实现相同的效果。<code>border: none</code>;</p><p><code>src</code> : 该属性指向要嵌入文档的URL路径。</p><p><code>width</code> 和 <code>height</code> : 指定iframe的宽度和高度。</p><p><code>sandbox</code> : 对框架中的内容应用额外的限制。属性的值可以为空以应用所有限制，也可以是空格分隔的标记以解除特定限制：</p><ul><li><code>allow-downloads-without-user-activation</code> ：允许在没有用户手势的情况下进行下载。</li><li><code>allow-downloads</code>：允许使用用户的手势进行下载。</li><li><code>allow-forms</code>：允许资源提交表单。如果未使用此关键字，则会阻止表单提交。</li><li><code>allow-modals</code>：允许资源<a href="https://html.spec.whatwg.org/multipage/origin.html#sandboxed-modals-flag">打开模式窗口</a>。</li><li><code>allow-orientation-lock</code>：允许资源<a href="https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation">锁定屏幕方向</a>。</li><li><code>allow-pointer-lock</code>：允许资源使用<a href="https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API">指针锁定 API</a>。</li><li><code>allow-popups</code>：允许弹出窗口（如 、或 ）。如果未使用此关键字，弹出窗口将无法以静默方式打开。<code>window.open()``target=&quot;_blank&quot;``showModalDialog()</code></li><li><code>allow-popups-to-escape-sandbox</code>：允许沙盒文档打开新窗口，而这些窗口不会继承沙盒。例如，这可以安全地对广告进行沙盒处理，而不会对广告链接到的页面施加相同的限制。</li><li><code>allow-presentation</code>：允许资源启动<a href="https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest">演示会话</a>。</li><li><code>allow-same-origin</code>：如果未使用此令牌，则资源将被视为来自始终不符合<a href="https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy">同源策略的特殊源</a>（可能会阻止访问<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_data_storage_access">数据存储/cookie</a> 和某些 JavaScript API）。</li><li><code>allow-scripts</code>：允许资源运行脚本（但不创建弹出窗口）。</li><li><code>allow-storage-access-by-user-activation</code> ：允许资源请求使用存储访问 API 访问父级的<a href="https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API">存储</a>功能。</li><li><code>allow-top-navigation</code>：允许资源导航顶级浏览上下文（名为 ）。<code>_top</code></li><li><code>allow-top-navigation-by-user-activation</code>：允许资源导航顶级浏览上下文，但仅当由用户手势启动时。</li></ul><h4 id="lt-embed-gt-和-lt-object-gt"><a href="#lt-embed-gt-和-lt-object-gt" class="headerlink" title="&lt;embed&gt;和&lt;object&gt;"></a><a href="https://www.runoob.com/tags/tag-embed.html"><code>&lt;embed&gt;</code></a>和<a href="https://www.runoob.com/tags/tag-object.html"><code>&lt;object&gt;</code></a></h4><p>现在已经不建议使用 <code>&lt;embed&gt;</code> 标签了，可以使用 <code>&lt;img&gt;</code>、<code>&lt;iframe&gt;</code>、<code>&lt;video&gt;</code>、<code>&lt;audio&gt;</code> 等标签代替。</p><p><code>&lt;object&gt;</code>定义一个嵌入的对象。请使用此元素向您的 XHTML 页面添加多媒体。此元素允许您规定插入 HTML 文档中的对象的数据和参数，以及可用来显示和操作数据的代码。</p><p><code>&lt;object&gt;</code> 标签用于包含对象，比如图像、音频、视频、Java applets、ActiveX、PDF 以及 Flash。</p><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>   <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;传送方式&quot;</span>   <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;服务器文件&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><code>&lt;form&gt;</code> ：<code>&lt;form&gt;</code>标签是成对出现的，以 <code>&lt;form&gt;</code>开始，以 <code>&lt;/form&gt;</code>结束。</li><li><code>action</code> ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。</li><li><code>method</code> ： 数据传送的方式（get/post）。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>    <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>   <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;pass&quot;</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pass&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="文本输入框、密码输入框"><a href="#文本输入框、密码输入框" class="headerlink" title="文本输入框、密码输入框"></a>文本输入框、密码输入框</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;名称&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><strong>type</strong> ：</li></ol><ul><li>当type=”<strong>text</strong>“时，输入框为<strong>文本输入框</strong> ;</li><li>当type=”<strong>password</strong>“时, 输入框为<strong>密码输入框</strong> ;</li><li>当type=”<strong>number</strong>“时, 输入框类类型为数字 ; 数字框只能输入数字，输入其他字符无效 ;</li></ul><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/2022-03-24/5e9196a5000183f107300076.jpg"></p><ul><li>当type=”<strong>url</strong>“时, 表示该输入框的类型为网址 ; 以http://或者https://开头,且后面必须有内容,否则表单提交的时候会报错误提示 ;</li></ul><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/2022-03-24/5e9198fb0001934606750121.jpg"></p><ul><li>当type=”<strong>email</strong>“时 , 则表示该输入框的类型为邮箱。数字框的值必须包含@ ; 数字框的值@之后必须有内容,否则会报错误提示。</li></ul><ol start="2"><li><strong>name</strong> ：为文本框命名，以备后台程序ASP 、PHP使用。</li><li><strong>value</strong> ：为文本输入框设置默认值。(一般起到提示作用)</li><li><strong>placeholder</strong> : 输入框占位符,里面可以放提示的输入信息。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>  姓名：<br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myName&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span><br>  密码：<br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pass&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form>  姓名：  <input type="text" name="myName" placeholder="请输入姓名">  <br/>  密码：  <input type="password" name="pass" placeholder="请输入密码"></form><h4 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h4><p><code>&lt;textarea&gt;</code> 标签 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>  <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;行数&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;列数&quot;</span>&gt;</span>文本<span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><code>&lt;textarea&gt;</code>标签是成对出现的，以 <code>&lt;textarea&gt;</code>开始，以 <code>&lt;/textarea&gt;</code>结束。</li><li>cols ：多行输入域的列数。</li><li>rows ：多行输入域的行数。</li></ol><blockquote><p>这两个属性可用css样式的width和height来代替：col用width、row用height来代替。</p></blockquote><ol start="4"><li>在 <code>&lt;textarea&gt;</code> <code>&lt;/textarea&gt;</code>标签之间可以输入默认值。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>  <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>联系我们<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;10&quot;</span> &gt;</span>在这里输入内容...<span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form  method="post" action="save.php">        <label>联系我们</label>        <textarea cols="50" rows="10" >在这里输入内容...</textarea></form><h4 id="lt-label-gt-标签"><a href="#lt-label-gt-标签" class="headerlink" title="&lt;label&gt; 标签"></a><a href="https://www.runoob.com/tags/tag-label.html"><code>&lt;label&gt;</code></a> 标签</h4><p><code>&lt;label&gt; </code>标签为 input 元素定义标注（标记）。label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。</p><p><code>&lt;span style=&quot;color:red&quot;&gt;</code>注意：标签的<code>&lt;span style=&quot;color:red&quot;&gt;</code> for 属性中的值应当与相关控件的<code>&lt;span style=&quot;color:red&quot;&gt;</code> id 属性值一定要相同。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;控件id名称&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span></span><br><span class="hljs-tag">  &lt;<span class="hljs-attr">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span>输入你的邮箱地址<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter email&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form  <label for="email">输入你的邮箱地址</label>  <input type="email" id="email" placeholder="Enter email"></form><h4 id="单选框、复选框"><a href="#单选框、复选框" class="headerlink" title="单选框、复选框"></a>单选框、复选框</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span>   <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio/checkbox&quot;</span>   <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;值&quot;</span>    <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;名称&quot;</span>   <span class="hljs-attr">checked</span>=<span class="hljs-string">&quot;checked&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ol><li><strong>type:</strong></li></ol><ul><li>当 <strong>type=”radio”</strong> 时，控件为<strong>单选框</strong></li><li>当 <strong>type=”checkbox”</strong> 时，控件为<strong>复选框</strong></li></ul><ol start="2"><li><strong>value：</strong>提交数据到服务器的值（后台程序PHP使用）</li><li><strong>name：</strong>为控件命名，以备后台程序 ASP、PHP 使用</li><li><strong>checked：</strong>当设置 checked=”checked” 时，该选项被默认选中</li></ol><form action="save.php" method="post">    <label>性别:</label>    <label>男</label>    <input type="radio" value="1" name="gender" />    <label>女</label>    <input type="radio" value="2" name="gender" /><br />    你有什么vehicle?<br />    <input type="checkbox" name="vehicle[]" value="Bike"> 我有一辆自行车<br>    <input type="checkbox" name="vehicle[]" value="Car"> 我有一辆小轿车<br>    <input type="checkbox" name="vehicle[]" value="Boat"> 我有一艘船<br></form><p><strong>注意</strong> : <strong>同一组</strong>的单选按钮，name 取值一定要一致，这样同一组的单选按钮才可以起到单选的作用。</p><h4 id="下拉列表"><a href="#下拉列表" class="headerlink" title="下拉列表"></a><a href="https://www.runoob.com/tags/tag-select.html">下拉列表</a></h4><p>下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。</p><ol><li>select和option标签都是双标签，它总是成对出现的，需要首标签和尾标签。</li><li>select标签里面只能放option标签，表示下拉列表的选项。</li><li>option标签放选项内容，不放置其他标签。</li><li>value：</li></ol><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/2022-03-24/52e6037300015a9905030165.jpg"></p><p>5、selected=”selected”：设置selected=”selected”属性，则该选项就被默认选中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;看书&quot;</span>&gt;</span>看书<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;旅游&quot;</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">&quot;selected&quot;</span>&gt;</span>旅游<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;运动&quot;</span>&gt;</span>运动<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;购物&quot;</span>&gt;</span>购物<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form>    <select>        <option value="看书">看书</option>        <option value="旅游" selected="selected">旅游</option>        <option value="运动">运动</option>        <option value="购物">购物</option>    </select></form><h4 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h4><p>在表单中有两种按钮可以使用，分别为：提交按钮、重置。当用户需要提交表单信息到服务器时，需要用到<strong>提交按钮</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span>   <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>   <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>type：只有当type值设置为submit时，按钮才有提交作用</li><li>value：按钮上显示的文字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;myName&quot;</span>&gt;</span>姓名：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot; &quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;myName &quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submitBtn&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form method="post" action="save.php">    <label for="myName">姓名：</label>    <input type="text" value=" " name="myName " />    <input type="submit" value="提交" name="submitBtn" /></form><h4 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h4><p>当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用<code>&lt;kbd&gt;</code>重置<code>&lt;/kbd&gt;</code>按钮使输入框恢复到初始状态。只需要把type设置为”reset”即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;重置&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>type：只有当type值设置为reset时，按钮才有重置作用</li><li>value：按钮上显示的文字</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;demo-form.php&quot;</span>&gt;</span><br>  Email: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  Pin: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pin&quot;</span> <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;重置&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><form action="demo-form.php">  Email: <input type="text" name="email"><br>  Pin: <input type="text" name="pin" maxlength="4"><br>  <input type="reset" value="重置">  <input type="submit" value="提交"></form>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML-学习&quot;&gt;&lt;a href=&quot;#HTML-学习&quot; class=&quot;headerlink&quot; title=&quot;HTML 学习&quot;&gt;&lt;/a&gt;HTML 学习&lt;/h1&gt;&lt;h2 id=&quot;HTML文档&quot;&gt;&lt;a href=&quot;#HTML文档&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://www.ckxgzxa.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://www.ckxgzxa.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机搭建Hadoop集群</title>
    <link href="https://www.ckxgzxa.top/HadoopContructionOnVM.html"/>
    <id>https://www.ckxgzxa.top/HadoopContructionOnVM.html</id>
    <published>2022-03-07T09:12:03.000Z</published>
    <updated>2022-04-14T12:15:50.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟机搭建Hadoop集群"><a href="#虚拟机搭建Hadoop集群" class="headerlink" title="虚拟机搭建Hadoop集群"></a>虚拟机搭建Hadoop集群</h1><h2 id="1-创建虚拟机"><a href="#1-创建虚拟机" class="headerlink" title="1. 创建虚拟机"></a>1. 创建虚拟机</h2><p>下载VirtualBox或其他虚拟机软件并安装.</p><p>进入管理菜单-&gt;全局设置-&gt;网络-&gt;添加新NAT网络, 勾选启用网络并开启DHCP,确认即可.</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307172344864.png"></p><p>随后点击新建虚拟机, 将名称改为cluster1, 虚拟机类型选择Linux, Red Hat(64位),</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307172741873.png"></p><p>将内存大小改为1536MB,点击下一步</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307172827900.png"></p><p>选择现在创建虚拟硬盘(VHD, 动态分配, 8G), 点击创建即可成功创建虚拟机:</p><p>如下图所示,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307173039991.png"></p><p>进入刚刚新建的虚拟机设置, 在网卡1处连接方式选择NAT网络, 在网卡2处勾选启用网络连接,连接方式设为: 仅主机(Host-Only)网络,点击OK即可,网络信息如下所示,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307173502018.png"></p><p>然后选择存储设置, 加载CentOS7系统镜像到光驱</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307173709989.png"></p><p>确认之后将虚拟机启动,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307173833389.png"></p><p>单击界面,让Virtual Box捕获鼠标(注:右Ctrl键可以接触捕获), 上移光标至Install CentOS 7处按回车键进行系统安装,</p><p>随后单击Continue</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174203851.png"></p><p>将时区更改为: :earth_asia: Asia, Shanghai</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307174519139.png"></p><p>磁盘分区默认即可,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307175112388.png"></p><p>随后设置用户名和密码, 如果密码不符合安全要求, 会需要点击两次以确认,耐心等待系统安装完成,然后点击重启按钮, 系统即安装完成</p><p>另外创建两台配置一样的虚拟机, 用户名分别为 cluster2 和 cluster3.</p><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><h3 id="2-1-关闭防火墙和-Selinux"><a href="#2-1-关闭防火墙和-Selinux" class="headerlink" title="2.1 关闭防火墙和 Selinux"></a>2.1 关闭防火墙和 Selinux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 关闭防火墙并阻止服务开机启动<br><span class="hljs-comment"># systemctl stop firewalld.service</span><br><span class="hljs-comment"># systemctl disable firewalld.service</span><br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307181250561.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 编辑Selinux配置文件关闭Selinux<br><span class="hljs-comment"># vi /etc/selinux/config</span><br>// 将SELINUX设为disabled<br>// 重启<br><span class="hljs-comment"># reboot</span><br>// 用root用户查看Selinux状态<br><span class="hljs-comment"># getenforce</span><br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307181417466.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220307181459557.png"></p><p>另两台虚拟机进行同样的操作.</p><h3 id="2-2-检查网卡是否开机自启"><a href="#2-2-检查网卡是否开机自启" class="headerlink" title="2.2 检查网卡是否开机自启"></a>2.2 检查网卡是否开机自启</h3><p>使用<code>ip addr</code>命令查看网卡名称,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308010929988.png"></p><p>可见两张网卡均未启用,</p><p>接下来编辑第一张网卡的配置文件, 修改如下文件<code>/etc/sysconfig/network-scripts/ifcfg-enp0s3</code>,将其中的ONBOOT项修改为yes,使网卡能够开机自启,</p><p>随后编辑第二章网卡的配置文件<code>etc/sysconfig/network-scripts/ifcfg-enp0s8</code>, 将BOOTPROTO设置为none, ONBOOT同样改为yes,并新增如下项:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">IPADDR</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">56.121</span>  <span class="hljs-comment"># cluster2为192.168.56.122, cluster3为192.168.56.123</span><br><span class="hljs-attr">NETMASK</span>=<span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-attr">NETWORK</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">56.0</span><br></code></pre></td></tr></table></figure><p>保存之后, 重启网络服务发现配置成功</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308011832168.png"></p><p>将另外两台机器也配置完成,进入下一步,</p><p>将网络配置成功之后我们就可以使用SSH工具连接虚拟机了,在这里我使用Finalshell工具进行连接:</p><p>添加如下所示的三个连接就可以连上虚拟机了:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308012637088.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308012706054.png"></p><p>对于文件传输功能, Finalshell有集成功能可以方便的拖拽文件进行上传和下载操作.</p><h3 id="2-3-安装软件"><a href="#2-3-安装软件" class="headerlink" title="2.3 安装软件"></a>2.3 安装软件</h3><p>每台机器上都要安装,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install perl*  ntpdate  libaio  screen -y<br></code></pre></td></tr></table></figure><h3 id="2-4-修改hosts"><a href="#2-4-修改hosts" class="headerlink" title="2.4 修改hosts"></a>2.4 修改hosts</h3><p>将每台机器的ip写入每台机器的hosts文件</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">10.0.2.8</span> cluster1<br><span class="hljs-number">10.0.2.4</span> cluster2<br><span class="hljs-number">10.0.2.9</span> cluster3<br></code></pre></td></tr></table></figure><p>修改之后测试网络连通性, 在cluster1上 ping 另两台机器:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308183616945.png"></p><p>可见hosts文件生效.</p><h3 id="2-5-新建用于维护集群的hadoop用户"><a href="#2-5-新建用于维护集群的hadoop用户" class="headerlink" title="2.5 新建用于维护集群的hadoop用户"></a>2.5 新建用于维护集群的hadoop用户</h3><p>在每台机器上用root用户执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建hadoop组</span><br>groupadd hadoop<br><span class="hljs-comment"># 新建hadoop用户</span><br>useradd -s /bin/bash -g hadoop -d /home/hadoop -m hadoop<br><span class="hljs-comment"># 修改 hadoop 这个用户的密码</span><br>passwd hadoop<br></code></pre></td></tr></table></figure><h3 id="2-6-生成SSH密钥并分发"><a href="#2-6-生成SSH密钥并分发" class="headerlink" title="2.6 生成SSH密钥并分发"></a>2.6 生成SSH密钥并分发</h3><p>首先在cluster1上切换到<strong>hadoop用户</strong>, 然后执行如下命令生成密钥:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p>随后分发密钥,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-copy-id cluster1<br>ssh-copy-id cluster2<br>ssh-copy-id cluster3<br></code></pre></td></tr></table></figure><p>密钥分发完毕, 使用cluster1与cluster2和cluster3建立连接均能成功,说明密钥分发无误.</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220308231119122.png"></p><h3 id="2-7-安装NTP服务"><a href="#2-7-安装NTP服务" class="headerlink" title="2.7 安装NTP服务"></a>2.7 安装NTP服务</h3><p>在三台机器上安装ntpdate</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install ntpdate<br></code></pre></td></tr></table></figure><p>在cluster1上执行yum安装命令安装ntp并将<code>/etc/ntp.conf</code>文件的下列四行注释掉,</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">server0<span class="hljs-selector-class">.centos</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span> iburst<br>server1<span class="hljs-selector-class">.centos</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span> iburst <br>server2<span class="hljs-selector-class">.centos</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span> iburst <br>server3<span class="hljs-selector-class">.centos</span><span class="hljs-selector-class">.pool</span><span class="hljs-selector-class">.ntp</span><span class="hljs-selector-class">.org</span> iburst<br></code></pre></td></tr></table></figure><p>在文件末加入如下内容:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">restrict</span> default ignore<br>restrict <span class="hljs-number">10.0.2.0</span> mask <span class="hljs-number">255.255.255.0</span> nomodify notrap<br>server <span class="hljs-number">127.127.1.0</span><br></code></pre></td></tr></table></figure><p>重启ntp服务并设置ntp 服务器开机自启</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">service</span> ntpd restart<br>chkconfig ntpd <span class="hljs-literal">on</span><br></code></pre></td></tr></table></figure><p>接下来对cluster2和cluster3这两个客户端进行配置:</p><p>设定每天0:00向服务器同步时间并写入日志:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># crontab -e</span><br></code></pre></td></tr></table></figure><p>输入以下内容后保存并退出：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> * * * /<span class="hljs-keyword">usr</span>/sbin/ntpdate cluster1&gt;&gt; /root/ntpd.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><p>之后在两台客户机上使用<code>ntpdate cluster1</code>同步时间.</p><h2 id="3-安装MySQL"><a href="#3-安装MySQL" class="headerlink" title="3. 安装MySQL"></a><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309011624607.png">3. 安装MySQL</h2><h3 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h3><p>只需要在cluster2上安装一个MySQL即可</p><p>登录root用户以执行以下命令:</p><p>若安装过MySQL先移除原有MySQL:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum remove mysql mysql-server mnysql-libs compat-mysql51<br><span class="hljs-built_in">rm</span> -rf /var/lib/mysql<br><span class="hljs-built_in">rm</span> -rf /etc/my.cnf<br></code></pre></td></tr></table></figure><p>将mysql-5.6.37-linux-glibc2.12-x86_64.tar.gz上传至cluster2,随后将其解压到/usr/local/目录下,并将解压后的文件目录名改为mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf mysql-5.6.37-linux-glibc2.12-x86_64.tar.gz<br><span class="hljs-built_in">mv</span> mysql-5.6.37-linux-glibc2.12-x86_64 mysql<br></code></pre></td></tr></table></figure><p>将MySQL添加进环境变量:在/etc/profile末尾添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MYSQL_HOME=/usr/local/mysql <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$MYSQL_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>随后用source命令使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>新建MySQL用户:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd mysql<br>useradd -r -g mysql -s /bin/false mysql<br><span class="hljs-built_in">cd</span> /usr/local/mysql<br><span class="hljs-built_in">chown</span> -R mysql:mysql .<br>scripts/mysql_install_db --user=mysql<br></code></pre></td></tr></table></figure><p>将当前目录的拥有者改为root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R root<br></code></pre></td></tr></table></figure><p>修改当前data目录拥有者为mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R mysql data<br>bin/mysqld_safe --user=mysql &amp;<br></code></pre></td></tr></table></figure><p>用<code>bin/mysql</code>命令登录MySQL,成功后使用<code>exit;</code>命令退出即可</p><p>进行修改MySQL的root账户密码操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">bin/mysql_secure_installation<br><span class="hljs-built_in">cp</span> support-files/mysql.server /etc/init.d/mysql.server<br></code></pre></td></tr></table></figure><p>查看MySQL的进程号并kill掉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef | grep mysql<br></code></pre></td></tr></table></figure><p>用普通用户配置访问权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;cluster&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION; <br>mysql<span class="hljs-operator">&gt;</span> FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309193809638.png"></p><h3 id="3-2-测试"><a href="#3-2-测试" class="headerlink" title="3.2 测试"></a>3.2 测试</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> database test_table; <br>mysql<span class="hljs-operator">&gt;</span> use test_table;<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> userinfo(id <span class="hljs-type">int</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>); <br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> userinfo <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>); <br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> userinfo;<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">drop</span> database test_table;<br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309194232911.png"></p><h2 id="4-安装JDK"><a href="#4-安装JDK" class="headerlink" title="4. 安装JDK"></a>4. 安装JDK</h2><p>需要在每台机器上安装JDK,将jdk压缩包传到服务器<code>/usr/local</code>目录下并解压,修改环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/jdk1.8.0_102<br><span class="hljs-built_in">export</span> JRE_HOME=/usr/local/jdk1.8.0_102/jre<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$JAVA_HOME</span>/lib:<span class="hljs-variable">$JRE_HOME</span>/lib:<span class="hljs-variable">$CLASSPATH</span> <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$JRE_HOME</span>/bin:<span class="hljs-variable">$JAVA_HOME</span>:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>配置完成,并使用scp命令将jdk复制到其他节点:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309205340946.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/jdk1.7.0_80/ cluster2:/usr/local/<br></code></pre></td></tr></table></figure><p>同样的方式将jdk目录写入环境变量</p><h2 id="5-安装Zookeeper"><a href="#5-安装Zookeeper" class="headerlink" title="5. 安装Zookeeper"></a>5. 安装Zookeeper</h2><p>最终需要在每一台机器上安装ZooKeeper:</p><p>在cluster1上将zookeeper的压缩包解压到/usr/local目录下,</p><p>并写入环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> ZOOKEEPER_HOME=/usr/local/zookeeper-3.4.6 <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$ZOOKEEPER_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>随后在 /usr/local/zookeeper-3.4.6/conf/zoo.cfg中新建zoo.cfg文件,写入如下内容:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># 客户端心跳时间(毫秒)    </span><br><span class="hljs-attr">tickTime</span>=<span class="hljs-number">2000</span><br><span class="hljs-comment"># 允许心跳间隔的最大时间</span><br><span class="hljs-attr">initLimit</span>=<span class="hljs-number">10</span> <br><span class="hljs-comment"># 同步时限</span><br><span class="hljs-attr">syncLimit</span>=<span class="hljs-number">5</span><br><span class="hljs-comment"># 数据存储目录</span><br><span class="hljs-attr">dataDir</span>=/home/hadoop_files/hadoop_data/zookeeper<br><span class="hljs-comment"># 数据日志存储目录</span><br><span class="hljs-attr">dataLogDir</span>=/home/hadoop_files/hadoop_logs/zookeeper/dataLog <br><span class="hljs-comment"># 端口号</span><br><span class="hljs-attr">clientPort</span>=<span class="hljs-number">2181</span><br><span class="hljs-comment"># 集群节点和服务端口配置</span><br><span class="hljs-attr">server.1</span>=cluster1:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span> <br><span class="hljs-attr">server.2</span>=cluster2:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span> <br><span class="hljs-attr">server.3</span>=cluster3:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br></code></pre></td></tr></table></figure><p>接下来创建zookeeper的数据目录和日志存储目录, 并修改文件夹的权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_data/zookeeper<br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_logs/zookeeper/dataLog <br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_logs/zookeeper/logs<br><br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /home/hadoop_files<br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/zookeeper-3.4.6<br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309214332045.png"></p><p>在 cluster1 号服务器的 data 目录中创建一个文件 myid，输入内容为 1, 且myid 应与 zoo.cfg 中的集群节点相匹配, cluster2和cluster3就写2和3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1&quot;</span> &gt;&gt; /home/hadoop_files/hadoop_data/zookeeper/myid<br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309214553265.png"></p><p>接下来修改zookeeper/目录下相关配置文件</p><p>修改 zookeeper 的日志输出路径(注意CDH 版与原生版配置文件不同)</p><blockquote><p>修改bin/zkEnv.sh中的部分如下所示:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;x<span class="hljs-variable">$&#123;ZOO_LOG_DIR&#125;</span>&quot;</span> = <span class="hljs-string">&quot;x&quot;</span> ]<br><span class="hljs-keyword">then</span><br>ZOO_LOG_DIR=<span class="hljs-string">&quot;/home/hadoop_files/hadoop_logs/zookeeper/logs&quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;x<span class="hljs-variable">$&#123;ZOO_LOG4J_PROP&#125;</span>&quot;</span> = <span class="hljs-string">&quot;x&quot;</span> ]<br><span class="hljs-keyword">then</span><br>ZOO_LOG4J_PROP=<span class="hljs-string">&quot;INFO,ROLLINGFILE&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure></blockquote><p>然后修改conf/zookeeper的日志配置文件<code>log4j.properties</code>:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">zookeeper.root.logger</span>=<span class="hljs-string">INFO,ROLLINGFILE log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender</span><br></code></pre></td></tr></table></figure><p>将zookeeper-3.4.6的内容复制到其他两个节点上:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/zookeeper-3.4.6 cluster2:/usr/local/ <br>scp -r /usr/local/zookeeper-3.4.6 cluster3:/usr/local/<br></code></pre></td></tr></table></figure><p>接下来切换到hadoop用户,使用<code>source /etc/profile</code>刷新环境变量,随后启动zookeeper:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">zkServer.sh start<br></code></pre></td></tr></table></figure><p>三台机器都把zookeeper启动之后用命令<code>jps</code>查看进程是否启动:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309234544293.png"></p><p>可以看到在每台机器上都能看到一个叫<em>QuorumPeerMain</em>的进程,说明启动成功</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309234950820.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309235011745.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220309235023280.png"></p><p>可以看到三台机器中一台是leader,另两台是follower</p><p>zookeeper的关闭命令是<code>zkServer.sh stop</code></p><h2 id="6-安装Kafka"><a href="#6-安装Kafka" class="headerlink" title="6. 安装Kafka"></a>6. 安装Kafka</h2><h3 id="6-1-安装"><a href="#6-1-安装" class="headerlink" title="6.1 安装"></a>6.1 安装</h3><p>在cluster1上解压kafka到/usr/local</p><p>然后添加环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KAFKA_HOME=/usr/local/kafka_2.10-0.8.2.1 <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$KAFKA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>随后修改<code>kafka/config/server.properties</code>文件:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># 1. 将brokers 的 id设为唯一的值,这里就把编号作为它的值, 即1,2,3</span><br><span class="hljs-attr">broker.id</span>=<span class="hljs-string">1</span><br><span class="hljs-comment"># 2. 修改日志路径</span><br><span class="hljs-attr">log.dirs</span>=<span class="hljs-string">/home/hadoop_files/hadoop_logs/kafka</span><br><span class="hljs-comment"># 3. zookeeper集群的ip和端口, 用逗号隔开</span><br><span class="hljs-attr">zookeeper.connect</span>=<span class="hljs-string">cluster1:2181,cluster2:2181,cluster3:2181</span><br><span class="hljs-comment"># 4. 对应机器的ip地址!</span><br><span class="hljs-attr">advertised.host.name</span>=<span class="hljs-string">192.168.56.121</span><br></code></pre></td></tr></table></figure><p>创建logs文件夹:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_logs/kafka<br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /home/hadoop_files<br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/kafka_2.10-0.8.2.1<br></code></pre></td></tr></table></figure><p>之后使用 hadoop 用户启动 kafka 集群<br>先启动 zookeeper 集群，然后在 kafka 集群中的每个节点使用,下面是启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-server-start.sh /usr/local/kafka_2.10-0.8.2.1/config/server.properties &amp;<br></code></pre></td></tr></table></figure><h3 id="6-2-测试"><a href="#6-2-测试" class="headerlink" title="6.2 测试"></a>6.2 测试</h3><p>使用hadoop用户执行命令,</p><p>创建topic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-topics.sh --create --zookeeper cluster1:2181,cluster2:2181,cluster3:2181 --replication-factor 3 --partitions 1 --topic mykafka<br></code></pre></td></tr></table></figure><p>查看Topic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-topics.sh --list --zookeeper cluster1:2181,cluster2:2181,cluster3:2181<br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310002701290.png"></p><p>查看详细信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-topics.sh --describe --zookeeper cluster1:2181,cluster2:2181,cluster3:2181 <br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310002812404.png"></p><p>在cluster1上执行如下命令用来发送消息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-console-producer.sh --broker-list localhost:9092 --topic mykafka<br></code></pre></td></tr></table></figure><p>在cluster2上执行如下命令用来接收消息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kafka-console-consumer.sh -zookeeper cluster1:2181,cluster2:2181,cluster3:2181 --topic mykafka --from-beginning<br></code></pre></td></tr></table></figure><p>接着在cluster1上输入以下内容:</p><blockquote><p>test</p><p>mycluster test</p></blockquote><p>在cluster2上可以成功接收到相应信息</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310003237619.png"></p><p>在每台机器上执行<code>kafka-server-stop.sh</code>命令关闭kafka,随后在每台机器上用screen命令新建窗口在后台跑kafka集群</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">screen -S kafka<br>kafka-server-start.sh <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/kafka_2.10-0.8.2.1/</span>config/server.properties<br></code></pre></td></tr></table></figure><p>随后使用Ctrl +  A + D退出新建的screen,用<code>jps</code>命令看到Kafka进程在运行</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310003857453.png"></p><h2 id="7-安装Hadoop"><a href="#7-安装Hadoop" class="headerlink" title="7. 安装Hadoop"></a>7. 安装Hadoop</h2><h3 id="7-1-安装"><a href="#7-1-安装" class="headerlink" title="7.1 安装"></a>7.1 安装</h3><p><strong>在启动Hadoop之前应先启动zookeeper</strong></p><p>以下命令若无特殊说明,均使用 用户hadoop执行</p><p>将 hadoop-2.6.5.tar.gz 解压到 /usr/local/ 目录下</p><p>进入hadoop配置文件目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/hadoop-2.6.5/etc/hadoop<br></code></pre></td></tr></table></figure><p>修改hadoop-env.sh文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/jdk1.7.0_80<br><span class="hljs-built_in">export</span> HADOOP_PID_DIR=/home/hadoop_files<br></code></pre></td></tr></table></figure><p>配置mapred-env.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> HADOOP_MAPRED_PID_DIR=/home/hadoop_files<br></code></pre></td></tr></table></figure><p>配置core-site.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 指定 hdfs的 nameservices名称为 mycluster，与 hdfs-site.xml的 HA配置相同 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://cluster1:9000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 指定缓存文件存储的路径 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_tmp/hadoop/data/tmp<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 配置 hdfs文件被永久删除前保留的时间（单位：分钟），默认值为 0表明垃圾回收站功能关闭 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.trash.interval<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1440<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 指定 zookeeper地址，配置 HA时需要 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>ha.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:2181,cluster2:2181,cluster3:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置hdfs-site.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 指定 hdfs元数据存储的路径 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.name.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_data/hadoop/namenode<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 hdfs数据存储的路径 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.datanode.data.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_data/hadoop/datanode<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.secondary.http.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:50090<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 数据备份的个数 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.replication<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 关闭权限验证 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.permissions.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 开启 WebHDFS功能（基于 REST的接口服务） --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置mapred-site.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 指定 MapReduce计算框架使用 YARN --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 jobhistory server的 rpc地址 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:10020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 jobhistory server的 http地址 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:19888<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置yarn-site.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- NodeManager上运行的附属服务，需配置成 mapreduce_shuffle才可运行 MapReduce程序 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 配置 Web Application Proxy安全代理（防止 yarn被攻击） --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.web-proxy.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster2:8888<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-comment">&lt;!-- 开启日志 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 配置日志删除时间为 7天， ，-1为禁用，单位为秒 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>604800<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 修改日志目录 --&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.remote-app-log-dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_logs/yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:8032<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:8030<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1:8031<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置slaves文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cluster1</span><br>cluster2 <br>cluster3<br></code></pre></td></tr></table></figure><p>在所有节点上创建如下目录,即上述配置涉及的目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_data/hadoop/namenode <br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_data/hadoop/datanode<br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_tmp/hadoop/data/tmp<br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_logs/yarn<br></code></pre></td></tr></table></figure><p>将cluster1的hadoop工作目录同步到集群其他节点:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/hadoop-2.6.5 cluster2:/usr/local/<br>scp -r /usr/local/hadoop-2.6.5 cluster3:/usr/local/<br></code></pre></td></tr></table></figure><p>之后保证工作目录所有者为hadoop用户</p><p>每台机器新建环境变量如下, 并使之生效:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> HADOOP_HOME=/usr/local/hadoop-2.6.5<br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$HADOOP_HOME</span>/lib/native<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HADOOP_HOME</span>/bin:<span class="hljs-variable">$HADOOP_HOME</span>/sbin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>启动zookeeper集群后开始格式化:</p><p>在所有节点上启动journalnode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hadoop-daemon.sh start journalnode<br></code></pre></td></tr></table></figure><p>使用jps可以看到journalnode进程</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310010351641.png"></p><p>在cluster1上执行格式化HDFS命令:<code>hdfs namenode -format, </code></p><p>之后使用<code>hadoop-daemon.sh stop journalnode</code>命令可在节点上关闭journalnode, </p><p>在cluster1上启用HDFS:<code>start-dfs.sh</code>, </p><p>可在cluster1上看到NameNode, DataNode, SecondaryNameNode;</p><p> 在cluster2和cluster3上看到DataNode:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310012508472.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310012522550.png"></p><p>在cluster1上启用YARN:<code>start-yarn.sh</code></p><p>启动后 cluster1 上使用 jps 可以看到NodeManager, ResourceManager, </p><p>cluster2 和 cluster3 上可以看到NodeManager:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310012949160.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310013004848.png"></p><h3 id="7-2-测试"><a href="#7-2-测试" class="headerlink" title="7.2 测试"></a>7.2 测试</h3><p>启动HDFS 后，可以在浏览器中，打开 <a href="http://192.168.56.121:50070/">http://192.168.56.121:50070</a>，可以看到HDFS 的 web 界面:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310013155182.png"></p><p>上图第一页是当前HDFS 的概况，里面显示了HDFS 的启动时间，版本等信息。</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310013244551.png"></p><p>Datanodes页面显示了当前HDFS 中的可用节点。</p><p>启用YARN后可以通过访问<a href="http://192.168.56.121:8088/">http://192.168.56.121:8088</a>查看YARN的web界面</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310013421172.png"></p><p>该页面展示了所有提交到 YARN 上的程序，点击左侧的Nodes 可以看到 YARN 的节点:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310090014904.png" alt="image-20220310090014904"></p><p>此处每个节点的可用内存 Mem Avail 为 8G，而我们的虚拟机每台内存只有 1.5G，由于没有在 yarn-site.xml 这个文件中对节点的可用内存进行配置出现了此问题，可以增加以下内容进行配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 配置 nodemanager 可用的资源内存 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>20480<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-comment">&lt;!-- 配置 nodemanager 可用的资源 CPU --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.cpu-vcores<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>24<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><p>进行命令行测试:</p><p>在cluster1上,</p><p>首先切换到hadoop用户目录:<code>cd ~/</code></p><p>新建一个测试文件:<code>Vi testfile</code></p><p>输入:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">1<br>2<br>3<br></code></pre></td></tr></table></figure><p>保存之后退出</p><p>在 HDFS 的根目录创建 test 目录: <code>hdfs dfs -mkdir /test</code></p><p>查看HDFS 根目录的文件: <code>hdfs dfs -ls /</code></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310014227354.png"></p><p>将测试文件 testfile 上传至 HDFS 根目录下的 test 目录中: <code>hdfs dfs -put testfile /test</code></p><p>在cluster2上,</p><p>首先切换到hadoop用户目录:<code>cd ~/</code></p><p>查看HDFS 根目录: <code>hdfs dfs -ls /</code></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310014513363.png"></p><p>查看HDFS 根目录下的 test 目录，看到刚才在 cluster1 上上传的文件 testfile: <code>hdfs dfs -ls /test</code></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310014603118.png"></p><p>使用<code>hdfs dfs -get /test/testfile</code>将testfile下载到本地,</p><p>再查看当前目录下的文件可以发现testfile,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310014808596.png" alt="image-20220310014808596"></p><h2 id="8-安装HBase"><a href="#8-安装HBase" class="headerlink" title="8. 安装HBase"></a>8. 安装HBase</h2><h3 id="8-1-安装"><a href="#8-1-安装" class="headerlink" title="8.1 安装"></a>8.1 安装</h3><p><strong>HBase 启动的先决条件是 zookeeper 和Hadoop 已经启动</strong></p><p>在cluster1上, 将hbase-1.2.6-bin.tar.gz解压到/usr/local/目录下,随后修改<code>/usr/local/hbase-1.2.6/conf/</code>目录下的hbase-env.sh如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置 JDK 安装路径</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/jdk1.7.0_80 <br><span class="hljs-comment"># 配置 Hadoop 安装路径</span><br><span class="hljs-built_in">export</span> HADOOP_HOME=/usr/local/hadoop-2.6.5 <br><span class="hljs-comment"># 设置 HBase 的日志目录</span><br><span class="hljs-built_in">export</span> HBASE_LOG_DIR=/home/hadoop_files/hadoop_logs/hbase/logs <br><span class="hljs-comment"># 使用独立的ZooKeeper 集群</span><br><span class="hljs-built_in">export</span> HBASE_MANAGES_ZK=<span class="hljs-literal">false</span> <br><span class="hljs-comment"># 设置 pid 的路径</span><br><span class="hljs-built_in">export</span> HBASE_PID_DIR=/home/hadoop_files<br></code></pre></td></tr></table></figure><p>配置hbase-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.rootdir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://cluster1:9000/hbase<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.cluster.distributed<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.master<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>60000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span>    <br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_tmp/hbase/tmp<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>cluster1,cluster2,cluster3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br> <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop_files/hadoop_data/zookeeper<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br> <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>zookeeper.session.timeout<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>120000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.regionserver.restart.on.zk.expire<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hbase.master.info.port<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>60010<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置regionservers</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cluster1</span><br>cluster2<br>cluster3<br></code></pre></td></tr></table></figure><p>删除hbase的slf4j-log4j12-1.7.5.jar, 解决hbase和hadoop的LSF4J冲突,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /usr/local/hbase-1.2.6/lib/slf4j-log4j12-1.7.5.jar /usr/local/hbase-1.2.6/lib/slf4j-log4j12-1.7.5.jar.bk<br></code></pre></td></tr></table></figure><p>将 hbase 工作目录同步到集群其它节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/hbase-1.2.6/ cluster2:/usr/local/ <br>scp -r /usr/local/hbase-1.2.6/ cluster3:/usr/local/<br></code></pre></td></tr></table></figure><p>在所有节点创建 hbase 的缓存文件目录和日志文件目录,并修改相应权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_tmp/hbase/tmp<br><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_logs/hbase/logs<br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/hbase-1.2.6 <br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /home/hadoop_files<br></code></pre></td></tr></table></figure><p>Hbase的环境变量如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> HBASE_HOME=/usr/local/hbase-1.2.6 <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HBASE_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>在cluster1上,先启动zookeeper, Hadoop的HDFS和YARN,然后才能启动HBase,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">start-dfs.sh<br>start-yarn.sh<br>start-hbase.sh<br></code></pre></td></tr></table></figure><p>启动后在cluster1上使用<code>jps</code>可以看到HMaster和HRegionServer,</p><p>cluster2和cluster3上可以看到HRegionServer</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310085135752.png" alt="image-20220310085135752"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310085202547.png" alt="image-20220310085202547"></p><h3 id="8-2-测试"><a href="#8-2-测试" class="headerlink" title="8.2 测试"></a>8.2 测试</h3><p>打开<a href="http://192.168.56.121:60010/">http://192.168.56.121:60010</a>查看Hbase的web界面</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310090107851.png"></p><p>在cluster1上, 输入<code>hbase shell</code> 进入hbase shell.键入以下命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash">create <span class="hljs-string">&#x27;userinfotable&#x27;</span>,&#123;NAME=&gt;<span class="hljs-string">&#x27;username&#x27;</span>&#125;,&#123;NAME=&gt;<span class="hljs-string">&#x27;fullname&#x27;</span>&#125;,&#123;NAME=&gt;<span class="hljs-string">&#x27;homedir&#x27;</span>&#125;</span> <br><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash">put <span class="hljs-string">&#x27;userinfotable&#x27;</span>,<span class="hljs-string">&#x27;r1&#x27;</span>,<span class="hljs-string">&#x27;username&#x27;</span>,<span class="hljs-string">&#x27;vcsa&#x27;</span></span><br><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash">put <span class="hljs-string">&#x27;userinfotable&#x27;</span>,<span class="hljs-string">&#x27;r2&#x27;</span>,<span class="hljs-string">&#x27;username&#x27;</span>,<span class="hljs-string">&#x27;sasuser&#x27;</span></span> <br><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash">scan <span class="hljs-string">&#x27;userinfotable&#x27;</span></span><br></code></pre></td></tr></table></figure><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310091241471.png" alt="image-20220310091241471"></p><p>在 web 界面也可以看到刚才建立的表:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310091504388.png" alt="image-20220310091504388"></p><p>删除刚才建立的表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash"><span class="hljs-built_in">disable</span> <span class="hljs-string">&#x27;userinfotable&#x27;</span></span> <br><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash">drop <span class="hljs-string">&#x27;userinfotable&#x27;</span></span> <br><span class="hljs-meta prompt_">hbase&gt; </span><span class="language-bash"><span class="hljs-built_in">exit</span></span><br></code></pre></td></tr></table></figure><h2 id="9-安装Hive"><a href="#9-安装Hive" class="headerlink" title="9. 安装Hive"></a>9. 安装Hive</h2><h3 id="9-1-安装"><a href="#9-1-安装" class="headerlink" title="9.1 安装"></a>9.1 安装</h3><p><strong>hive 能启动的先决条件是 MySQL 已经安装并配置完成，而且 HDFS 也要启动之后才能运行 hive</strong></p><p>将apache-hive-1.1.0-bin.tar.gz上传到<code>/usr/local</code>并解压</p><p>添加环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> HIVE_HOME=/usr/local/apache-hive-1.1.0-bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$HIVE_HOME</span>/bin:<span class="hljs-variable">$HIVE_HOME</span>/conf:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>使用root用户登录MySQL:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -u root -p<br></code></pre></td></tr></table></figure><p>创建用户hive, 密码hive:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">GRANT</span> USAGE <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;hive&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;hive&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION;<br></code></pre></td></tr></table></figure><p>创建数据库hive</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">create</span> database hive;<br></code></pre></td></tr></table></figure><p>允许任意 ip 以hive 登陆数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> hive.<span class="hljs-operator">*</span> <span class="hljs-keyword">to</span> hive@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;hive&#x27;</span>; <br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> hive.<span class="hljs-operator">*</span> <span class="hljs-keyword">to</span> hive@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;hive&#x27;</span>; <br>mysql<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> hive.<span class="hljs-operator">*</span> <span class="hljs-keyword">to</span> hive@<span class="hljs-string">&#x27;cluster2&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;hive&#x27;</span>;<br></code></pre></td></tr></table></figure><p>刷新权限并退出:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql<span class="hljs-operator">&gt;</span> flush privileges;<br>mysql<span class="hljs-operator">&gt;</span> exit;<br></code></pre></td></tr></table></figure><p>验证hive用户是否正确创建:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310093902048.png"></p><p>接下来修改hive-site.xml</p><p>将提供的hive-site.xml上传到apache-hive-1.1.0-bin/conf/目录下即可</p><p>将mysql-connector-java-5.1.43-bin.jar上传至 /usr/local/apache-hive-1.1.0-bin/lib/,</p><p>将jline-2.12.jar拷贝到/usr/local/hadoop-2.6.5/share/hadoop/yarn/lib/</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /usr/local/apache-hive-1.1.0-bin/lib/jline-2.12.jar /usr/local/hadoop-2.6.5/share/hadoop/yarn/lib/<br></code></pre></td></tr></table></figure><p>并将原先存在的jline-0.9.94.jar重命名为jline-0.9.94.jar.bak,</p><p>切换到hadoop用户执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /home/hadoop_files/hadoop_tmp/hive/iotmp<br>mkdir -p /home/hadoop_files/hadoop_logs/hive/querylog<br></code></pre></td></tr></table></figure><h2 id="10-安装Scala"><a href="#10-安装Scala" class="headerlink" title="10. 安装Scala"></a>10. 安装Scala</h2><p>在cluster1上将scala-2.10.6.tgz解压到/usr/local/目录下,</p><p>环境变量为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> SCALA_HOME=/usr/local/scala-2.10.6<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SCALA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>刷新环境变量后用<code>scala -version</code>查看Scala版本验证安装:</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310115940338.png"></p><p>复制到所有的服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/scala-2.10.6 cluster2:/usr/local/ <br>scp -r /usr/local/scala-2.10.6 cluster3:/usr/local/<br></code></pre></td></tr></table></figure><p>之后设置环境变量,并且修改文件夹权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/scala-2.10.6<br></code></pre></td></tr></table></figure><h2 id="11-安装Spark"><a href="#11-安装Spark" class="headerlink" title="11. 安装Spark"></a>11. 安装Spark</h2><h3 id="11-1-安装"><a href="#11-1-安装" class="headerlink" title="11.1 安装"></a>11.1 安装</h3><p>将spark-1.6.3-bin-hadoop2.6.tgz解压到/usr/local</p><p>环境变量为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> SPARK_HOME=/usr/local/spark-1.6.3-bin-hadoop2.6 <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SPARK_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># cluster1作为主节点需要再加一行</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SPARK_HOME</span>/sbin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>在 conf 文件夹里面复制一份 template，改名为 spark-env.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> conf/spark-env.sh.template conf/spark-env.sh<br></code></pre></td></tr></table></figure><p>并在其中添加以下语句:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/jdk1.7.0_80 <br><span class="hljs-built_in">export</span> SCALA_HOME=/usr/local/scala-2.10.6 <br><span class="hljs-built_in">export</span> SPARK_MASTER_IP=cluster1<br><span class="hljs-built_in">export</span> HADOOP_CONF_DIR=/usr/local/hadoop-2.6.5/etc/hadoop<br><span class="hljs-built_in">export</span> SPARK_DIST_CLASSPATH=$(/usr/local/hadoop-2.6.5/bin/hadoop classpath) <br><span class="hljs-built_in">export</span> SPARK_CLASSPATH=<span class="hljs-variable">$HIVE_HOME</span>/lib/mysql-connector-java-5.1.43-bin.jar <br><span class="hljs-built_in">export</span> SPARK_PID_DIR=/home/hadoop_files<br></code></pre></td></tr></table></figure><p>在conf下新建slaves文件,内容为:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">cluster1</span><br>cluster2<br>cluster3<br></code></pre></td></tr></table></figure><p>将 hive 目录下 conf 文件夹中的 hive-site.xml 复制到 spark 的 conf 目录下,</p><p>将 hadoop/etc/hadoop 文件中的 hdfs-site.xml 和 core-site.xml 文件复制到 spark 的 conf 目录下,</p><p>将 conf 目录下的 spark-defaults.conf.template 复制一份，改名为 spark-default.conf ,并在最下面加上一行:<code>spark.files file:///usr/local/spark-1.6.3-bin-hadoop2.6/conf/hdfs-site.xml,file:///usr/local/spark-1.6.3-binhadoop2.6/conf/core-site.xml</code></p><p>复制到所有的服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">scp -r /usr/local/spark-1.6.3-bin-hadoop2.6 cluster2:/usr/local/ <br>scp -r /usr/local/spark-1.6.3-bin-hadoop2.6 cluster3:/usr/local/<br></code></pre></td></tr></table></figure><p>修改 spark 文件夹的权限（每个 spark 结点）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/spark-1.6.3-bin-hadoop2.6<br></code></pre></td></tr></table></figure><p>在cluster1上运行Spark</p><p>运行 spark 前需启动 hadoop 的HDFS 和 YARN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">start-master.sh<br>start-slaves.sh<br></code></pre></td></tr></table></figure><blockquote><p>关闭 Spark 的命令（cluster1 上）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">stop-slaves.sh<br>stop-master.sh<br></code></pre></td></tr></table></figure></blockquote><h3 id="11-2-测试"><a href="#11-2-测试" class="headerlink" title="11.2 测试"></a>11.2 测试</h3><p>在 cluster1 上使用 jps 命令可以看到 Master 和 Worker，cluster2 和 3 上可以看到Worker,</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310122903560.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310122926901.png"></p><p>用浏览器访问 &lt;<a href="http://192.168.56.121:8080/">http://192.168.56.121:8080</a> &gt;可以看到 Spark 的web 界面，可以看到 3 个worker</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310122837660.png"></p><h2 id="12-安装Storm"><a href="#12-安装Storm" class="headerlink" title="12. 安装Storm"></a>12. 安装Storm</h2><p>storm需要Python2.6以上版本</p><p>将apache-storm-1.1.1.tar.gz解压到<code>/usr/local/</code>下,</p><p>环境变量添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> STORM_HOME=/usr/local/apache-storm-1.1.1 <br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$STORM_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>改一下权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> -R hadoop:hadoop apache-storm-1.1.1<br></code></pre></td></tr></table></figure><p>更改storm/conf/storm.yaml文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">storm.zookeeper.servers :</span><br><span class="hljs-string">-</span><span class="hljs-string">“cluster1”</span><br><span class="hljs-string">-</span><span class="hljs-string">“cluster2”</span><br><span class="hljs-string">-</span><span class="hljs-string">“cluster3”</span><br> <span class="hljs-attr">storm.local.dir :</span> <span class="hljs-string">“/home/hadoop_files/hadoop_tmp/storm/tmp”</span><br></code></pre></td></tr></table></figure><p>新建tmp文件夹,改权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /home/hadoop_files/hadoop_tmp/storm/tmp <br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /home/hadoop_files<br><span class="hljs-built_in">chown</span> -R hadoop:hadoop /usr/local/apache-storm-1.1.1<br></code></pre></td></tr></table></figure><p>在cluster1上新建storm-master的虚拟窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S storm-master<br>storm nimbus<br></code></pre></td></tr></table></figure><p>随后将窗口挂到后台</p><p>在cluster2,3上新建storm-supervisor的虚拟窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S storm-master<br>storm supervisor<br></code></pre></td></tr></table></figure><p>随后将窗口挂到后台</p><p>在cluster1上新建storm-ui的虚拟窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S storm-ui<br>storm ui<br></code></pre></td></tr></table></figure><p>随后将窗口挂到后台</p><p>在cluster1,2,3上新建storm-logviewer的虚拟窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S storm-logviewer<br>storm logviewer<br></code></pre></td></tr></table></figure><p>随后将窗口挂到后台</p><p>使用 jps 可以看到以下进程</p><p>cluster1：nimbus, core, logviewer</p><p>cluster2：Supervisor, logviewer</p><p>cluster3：Supervisor, logviewer</p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310130740038.png"></p><p><img src="https://zxastaticpages.oss-cn-beijing.aliyuncs.com/BlogPictures/image-20220310130759287.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;虚拟机搭建Hadoop集群&quot;&gt;&lt;a href=&quot;#虚拟机搭建Hadoop集群&quot; class=&quot;headerlink&quot; title=&quot;虚拟机搭建Hadoop集群&quot;&gt;&lt;/a&gt;虚拟机搭建Hadoop集群&lt;/h1&gt;&lt;h2 id=&quot;1-创建虚拟机&quot;&gt;&lt;a href=&quot;#1-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MCPE 我的世界基岩版level.dat相关配置</title>
    <link href="https://www.ckxgzxa.top/mcpe_level_intro.html"/>
    <id>https://www.ckxgzxa.top/mcpe_level_intro.html</id>
    <published>2022-02-18T13:27:10.000Z</published>
    <updated>2022-02-18T16:27:44.564Z</updated>
    
    <content type="html"><![CDATA[<table>    <tr>        <th bgcolor="yellow" align = "center">配置名</th>        <th bgcolor="yellow" align = "center">中文翻译</th>        <th bgcolor="yellow" align = "center">十六进制表示</th>        <th bgcolor="yellow" align = "center">备注</th>    </tr>    <tr>        <td align = "center">showcoordinates</td>        <td>坐标显示</td>        <td>73 68 6F 77 63 6F 6F 72 64 69 6E 61 74 65 73 [00 | 01]</td>        <td>中括号内如果为00, 则坐标显示为关闭, 为01, 坐标显示开</td>    </tr>    <tr>        <td align = "center">Difficulty</td>        <td>难度</td>        <td>44 69 66 66 69 63 75 6C 74 79 [00 | 01 | 02 | 03]</td>        <td>中括号内数字分别对应:和平|简单|普通|困难</td>    </tr>    <tr>        <td align = "center">RandomSeed</td>        <td>世界的种子号码</td>        <td>52 61 6E 64 6F 6D 53 65 65 64 [FF FF FF FF]</td>        <td>括号中4个字节为种子,规则为:若种子十进制为123456789, 化为十六进制07 5B CD 15,则在文件中为15 CD 5B 07</td>    </tr>    <tr>        <td align = "center">hasBeenLoadedInCreative</td>        <td>曾在创造模式加载</td>        <td>68 61 73 42 65 65 6E 4C 6F 61 64 65 64 49 6E 43 72 65 61 74 69 76 65 [00 | 01]</td>        <td>将此处设置为01将导致游戏无法获得成就,当在游戏中切换到创造模式,此处被置1,同时commandsEnabled也会置1,成就无法获得,需退出游戏将上述两项置0才可恢复成就</td>    </tr>    <tr>        <td align = "center">GameType</td>        <td>游戏模式</td>        <td>47 61 6D 65 54 79 70 65 [00 | 01 | 02]</td>        <td>00 为生存模式, 01 为创造模式, 02 为冒险模式</td>    </tr>    <tr>        <td align = "center">commandsEnabled</td>        <td>启用命令</td>        <td>63 6F 6D 6D 61 6E 64 73 45 6E 61 62 6C 65 64 [00 | 01]</td>        <td>当开启作弊时,此配置和hasBeenLoadedInCreative将会被置1,成就无法获得,将上述两项重新置为0可以重新开启成就</td>    </tr>    <tr>        <td align = "center">keepinventory</td>        <td>保留物品栏</td>        <td>6B 65 65 70 69 6E 76 65 6E 74 6F 72 79 [00 | 01]</td>        <td>开启死亡不掉落将此项置为1即可</td>    </tr>        <tr>        <td align = "center">randomtickspeed</td>        <td>随机刻速度</td>        <td>72 61 6E 64 6F 6D 74 69 63 6B 73 70 65 65 64 [XX | XX]</td>        <td>默认值为1</td>    </tr>    <tr>        <td align = "center">playerPermissionsLevel</td>        <td>其他玩家的权限等级</td>        <td>70 6C 61 79 65 72 50 65 72 6D 69 73 73 69 6F 6E 73 4C 65 76 65 6C [00 | 01 | 02]</td>        <td>00:访客, 01: 成员, 02: 操作员</td>    </tr>    <tr>        <td align = "center">startWithMapEnabled</td>        <td>初始地图</td>        <td>73 74 61 72 74 57 69 74 68 4D 61 70 45 6E 61 62 6C 65 64 [00 | 01]</td>        <td>玩家是否携带地图首次生成</td>    </tr>    <tr>        <td>bonusChestEnabled</td>        <td>奖励箱</td>        <td>62 6F 6E 75 73 43 68 65 73 74 45 6E 61 62 6C 65 64 [00 | 01]</td>        <td>是否允许生成奖励箱</td>    </tr>    <tr>        <td>serverChunkTickRange</td>        <td>渲染距离</td>        <td>73 65 72 76 65 72 43 68 75 6E 6B 54 69 63 6B 52 61 6E 67 65 [XX]</td>        <td>模拟距离</td>    </tr>    <tr>        <td>attackplayers</td>        <td>误伤</td>        <td>61 74 74 61 63 6B 70 6C 61 79 65 72 73 [00 | 01]</td>    </tr>    <tr>        <td>tntexplodes</td>        <td>TNT爆炸</td>        <td>74 6E 74 65 78 70 6C 6F 64 65 73 [00 | 01]</td>    </tr>    <tr>        <td>espawnblocksexplode</td>        <td>重生方块爆炸</td>        <td>72 65 73 70 61 77 6E 62 6C 6F 63 6B 73 65 78 70 6C 6F 64 65 [00 | 01]</td>    </tr>    <tr>        <td>tntexplodes</td>        <td>TNT爆炸</td>        <td>74 6E 74 65 78 70 6C 6F 64 65 73 [00 | 01]</td>    </tr>    <tr>        <td>tntexplodes</td>        <td>TNT爆炸</td>        <td>74 6E 74 65 78 70 6C 6F 64 65 73 [00 | 01]</td>    </tr>    <tr>        <td>tntexplodes</td>        <td>TNT爆炸</td>        <td>74 6E 74 65 78 70 6C 6F 64 65 73 [00 | 01]</td>    </tr></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
    &lt;tr&gt;
        &lt;th bgcolor=&quot;yellow&quot; align = &quot;center&quot;&gt;配置名&lt;/th&gt;
        &lt;th bgcolor=&quot;yellow&quot; align = &quot;center&quot;&gt;中文翻译&lt;/th&gt;
        &lt;th </summary>
      
    
    
    
    
    <category term="游戏" scheme="https://www.ckxgzxa.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>软件工程导论复习</title>
    <link href="https://www.ckxgzxa.top/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA.html"/>
    <id>https://www.ckxgzxa.top/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA.html</id>
    <published>2022-01-27T18:32:19.260Z</published>
    <updated>2021-05-14T17:06:43.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件工程导论"><a href="#软件工程导论" class="headerlink" title="软件工程导论"></a>软件工程导论</h1><h2 id="1-软件工程概论"><a href="#1-软件工程概论" class="headerlink" title="1. 软件工程概论"></a>1. 软件工程概论</h2><h3 id="1-1-软件危机-Soft-Crisis"><a href="#1-1-软件危机-Soft-Crisis" class="headerlink" title="1.1. 软件危机(Soft Crisis)"></a>1.1. 软件危机(Soft Crisis)</h3><ul><li><p>计算机软件的开发和维护过程中遇到的一系列严重问题</p></li><li><p>两方面问题</p><ul><li>如何开发软件,满足对软件日益增长的需求</li><li>如何维护数量不断膨胀的已有软件</li></ul></li><li><p>具体表现</p><ul><li><ol><li>对软件开发成本和进度的估计常常很不准确</li></ol></li><li><ol start="2"><li>用户不满意的现象经常发生</li></ol></li><li><ol start="3"><li>软件产品的质量往往靠不住</li></ol></li><li><ol start="4"><li>软件常常是不可维护的</li></ol></li><li><ol start="5"><li>软件没有适当的文档资料</li></ol></li><li><ol start="6"><li>软件成本在计算机系统总成本占比逐年上升</li></ol></li><li><ol start="7"><li>软件开发生产率提高的速度远不及计算机应用迅速普及深入的趋势</li></ol></li></ul></li><li><p>产生原因</p><ul><li><ol><li>与软件本身特点有关</li></ol><ul><li><p>逻辑部件</p><ul><li>质量难以评价, 管理、开发和维护困难</li></ul></li><li><p>规模庞大</p><ul><li>开发繁琐，多人分工协作，设计技术和管理等问题</li></ul></li></ul></li><li><ol start="2"><li>与软件开发与维护不正确有关</li></ol><ul><li>早期软件开发具有个体化特点</li><li>忽视软件需求分析的重要性</li><li>认为软件开发就是写程序并设法使之运行</li><li>轻视软件维护</li></ul></li></ul></li><li><p>消除途径</p><ul><li>对计算机软件有正确的认识, 消除”软件就是程序”的错误认识. 认识到软件开发是一种组织良好、管理严密、各类人员协同配合、共同完成的工程项目,充分借鉴吸取已有经验</li><li>推广使用在实践中总结出的开发软件的成功技术和方法,并继续研究探索</li><li>开发和使用更好地软件工具</li></ul></li></ul><h3 id="2-1-软件工程"><a href="#2-1-软件工程" class="headerlink" title="2.1 软件工程"></a>2.1 软件工程</h3><ul><li><p>简介</p><ul><li><p>定义</p><ul><li>指导计算机软件开发和维护的一门工程学科, 该学科的目的是生产出能按期交付的、在预算范围内的、满足用户需求的、质量合格的软件产品</li></ul></li><li><p>本质特性</p><ul><li>关注于大型程序的构造</li><li>中心课题是控制复杂性</li><li>软件经常变化</li><li>开发软件效率非常重要</li><li>和谐地合作是开发软件的关键（标准和规程）</li><li>软件必须有效地支持它的用户（满足各方面需求）</li><li>在软件工程领域中通常由具有一种文化的人替具有另一种文化的人开发产品</li></ul></li></ul></li><li><p>基本原理</p><ul><li>用分阶段的生命周期计划严格管理</li><li>坚持进行阶段评审</li><li>实行严格的产品控制</li><li>采用现代程序设计技术</li><li>结果应能清楚地审查</li><li>开发小组的人员应该小而精</li></ul></li><li><p>方法学</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;软件工程导论&quot;&gt;&lt;a href=&quot;#软件工程导论&quot; class=&quot;headerlink&quot; title=&quot;软件工程导论&quot;&gt;&lt;/a&gt;软件工程导论&lt;/h1&gt;&lt;h2 id=&quot;1-软件工程概论&quot;&gt;&lt;a href=&quot;#1-软件工程概论&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="软件工程导论" scheme="https://www.ckxgzxa.top/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Authentication required. System policy prevents WiFi scans</title>
    <link href="https://www.ckxgzxa.top/LinuxProblem001.html"/>
    <id>https://www.ckxgzxa.top/LinuxProblem001.html</id>
    <published>2022-01-11T16:24:38.000Z</published>
    <updated>2022-04-09T14:28:58.793Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Authentication-required-System-policy-prevents-WiFi-scans"><a href="#Authentication-required-System-policy-prevents-WiFi-scans" class="headerlink" title="Authentication required. System policy prevents WiFi scans"></a>Authentication required. System policy prevents WiFi scans</h1><p>那天装了Ubuntu树莓派的系统，由于没有显示器，于是给树莓派连的网线和VNC，发现打开 WIFI 的时候总是弹出 “Authentication required. System policy prevents WiFi scans” 这样的标识让你输入密码，输完之后还是不能用 WIFI，点击又会不断弹出这样的标识，好像输完密码会自动退出 WIFI 扫描列表的界面吧，写此文的时候没用Ubuntu了，不记得了。于是 Google 找到了类似的问题，记录如下：</p><p>在 <code>/etc/polkit-1/localauthority/50-local-d</code> 目录下新建一个扩展名为 <code>pkla</code> 的文件，在其中写入如下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Allow Wifi Scan]</span><br><span class="hljs-attr">Identity</span>=unix-user:*<br><span class="hljs-attr">Action</span>=org.freedesktop.NetworkManager.wifi.scan<span class="hljs-comment">;org.freedesktop.NetworkManager.enable-disable-wifi;org.freedesktop.NetworkManager.settings.modify.own;org.freedesktop.NetworkManager.settings.modify.system;org.freedesktop.NetworkManager.network-control</span><br><span class="hljs-attr">ResultAny</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">ResultInactive</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">ResultActive</span>=<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><p>不过好像只要加入<code>Action=org.freedesktop.NetworkManager.wifi.scan;</code>就行，其他的不加也无所谓。</p><p>原贴链接:<a href="https://askubuntu.com/questions/1291512/authentication-required-system-policy-prevents-wifi-scans-in-focalfossa">https://askubuntu.com/questions/1291512/authentication-required-system-policy-prevents-wifi-scans-in-focalfossa</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Authentication-required-System-policy-prevents-WiFi-scans&quot;&gt;&lt;a href=&quot;#Authentication-required-System-policy-prevents-WiFi-scans&quot; clas</summary>
      
    
    
    
    <category term="OS" scheme="https://www.ckxgzxa.top/categories/OS/"/>
    
    <category term="Linux" scheme="https://www.ckxgzxa.top/categories/OS/Linux/"/>
    
    
  </entry>
  
</feed>
